https://wikidocs.net/16

[딕셔너리 자료형]

사람은 누구든지 "이름" = "홍길동", "생일" = "몇 월 몇 일" 등으로 구분할 수 있다. 
파이썬은 영리하게도 이러한 대응 관계를 나타낼 수 있는 자료형을 가지고 있다. 
요즘 사용하는 대부분의 언어들도 이러한 대응 관계를 나타내는 자료형을 갖고 있는데, 
이를 연관 배열(Associative array) 또는 해시(Hash)라고 한다.


파이썬에서는 이러한 자료형을 딕셔너리(Dictionary)라고 하는데, 
단어 그대로 해석하면 사전이라는 뜻이다. 
즉, people이라는 단어에 "사람", baseball이라는 단어에 "야구"라는 뜻이 부합되듯이 
딕셔너리는 Key와 Value라는 것을 한 쌍으로 갖는 자료형이다. 
예컨대 Key가 "baseball"이라면 Value는 "야구"가될 것이다.

딕셔너리는 리스트나 튜플처럼 순차적으로(sequential) 해당 요소값을 구하지 않고 Key를 통해 Value를 얻는다. 
이것이 바로 딕셔너리의 가장 큰 특징이다. 
baseball이라는 단어의 뜻을 찾기 위해 사전의 내용을 순차적으로 모두 검색하는 것이 
아니라 baseball이라는 단어가 있는 곳만 펼쳐 보는 것이다.


===============================================================================================================

[딕셔너리는 어떻게 만들까?]


다음은 기본적인 딕셔너리의 모습이다.

{Key1:Value1, Key2:Value2, Key3:Value3 ...}
Key와 Value의 쌍 여러 개가 {과 }로 둘러싸여 있다. 
각각의 요소는 Key : Value 형태로 이루어져 있고 쉼표(,) 로 구분되어 있다.

(※ Key에는 변하지 않는 값을 사용하고, Value에는 변하는 값과 변하지 않는 값 모두 사용할 수 있다.)

다음의 딕셔너리 예를 살펴보자.

>>> dic = {'name':'pey', 'phone':'0119993323', 'birth': '1118'}
위에서 Key는 각각 'name', 'phone', 'birth'이고, 각각의 Key에 해당하는 Value는 'pey', '0119993323', '1118'이 된다.

- 딕셔너리 dic의 정보 -

key	value

name	pey

phone	01199993323

birth	1118


다음의 예는 Key로 정수값 1, Value로 'hi'라는 문자열을 사용한 예이다.

>>> a = {1: 'hi'}
또한 다음의 예처럼 Value에 리스트도 넣을 수 있다.

>>> a = { 'a': [1,2,3]}


===============================================================================================================

[딕셔너리 쌍 추가, 삭제하기]


1. 딕셔너리 쌍 추가하기

>>> a = {1: 'a'}
>>> a[2] = 'b'
>>> a
{2: 'b', 1: 'a'}
{1: 'a'}라는 딕셔너리에 a[2] = 'b'와 같이 입력하면 딕셔너리 a에 Key와 Value가 각각 2와'b'인 2 : 'b'라는 딕셔너리 쌍이 추가된다.

>>> a['name'] = 'pey'
{'name':'pey', 2: 'b', 1: 'a'}
딕셔너리 a에 'name': 'pey'라는 쌍이 추가되었다.

>>> a[3] = [1,2,3]
{'name': 'pey', 3: [1, 2, 3], 2: 'b', 1: 'a'}
Key는 3, Value는 [1, 2, 3]을 가지는 한 쌍이 또 추가되었다.


---------------------------------------------------------------------------------------------------------------

2. 딕셔너리 요소 삭제하기

>>> del a[1]
>>> a
{'name': 'pey', 3: [1, 2, 3], 2: 'b'}
위의 예제는 딕셔너리 요소를 지우는 방법을 보여준다. del 함수를 사용해서 del a[key]처럼 입력하면 지정한 key에 해당하는 {key : value} 쌍이 삭제된다.


