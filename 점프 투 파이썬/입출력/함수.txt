https://wikidocs.net/24


[함수]


def 함수명(입력 인수):
    <수행할 문장1>
    <수행할 문장2>
    ...


def sum(a, b): 
    return a + b

>>> a = 3
>>> b = 4
>>> c = sum(a, b)
>>> print(c)
7



==============================================================================================================

[입력값이 몇 개가 될지 모를 때는 어떻게 해야 할까?]


>>> def sum_many(*args): 
...     sum = 0 
...     for i in args: 
...         sum = sum + i 
...     return sum 
... 


>>> result = sum_many(1,2,3)
>>> print(result)
6
>>> result = sum_many(1,2,3,4,5,6,7,8,9,10)
>>> print(result)
55

------------------------------------------------------------------------

>>> def sum_mul(choice, *args): 
...     if choice == "sum": 
...         result = 0 
...         for i in args: 
...             result = result + i 
...     elif choice == "mul": 
...         result = 1 
...         for i in args: 
...             result = result * i 
...     return result 



>>> result = sum_mul('sum', 1,2,3,4,5)
>>> print(result)
15
>>> result = sum_mul('mul', 1,2,3,4,5)
>>> print(result)
120


==============================================================================================================

[입력 인수에 초깃값 미리 설정하기]


def say_myself(name, old, man=True): 
    print("나의 이름은 %s 입니다." % name) 
    print("나이는 %d살입니다." % old) 
    if man: 
        print("남자입니다.")
    else: 
        print("여자입니다.")


say_myself("박응용", 27)
say_myself("박응용", 27, True)

==============================================================================================================

[함수 안에서 함수 밖의 변수를 변경하는 방법]


1. return 이용하기

# vartest_return.py
a = 1 
def vartest(a): 
    a = a +1 
    return a

a = vartest(a) 
print(a)
첫 번째 방법은 return을 이용하는 방법이다. vartest 함수는 입력으로 들어온 값에 1을 더한값을 돌려준다. 
따라서 a = vartest(a)라고 대입하면 a가 vartest 함수의 결과값으로 바뀐다. 여기서도 
물론 vartest 함수 안의 a 변수는 함수 밖의 a와는 다른 것이다.

------------------------------------------------------------------------


2. global 명령어 이용하기

# vartest_global.py
a = 1 
def vartest(): 
    global a 
    a = a+1

vartest() 
print(a)
























