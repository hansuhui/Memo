http://blog.naver.com/musasin84?Redirect=Log&logNo=60190812853
http://blog.naver.com/PostList.nhn?blogId=musasin84&from=postList&categoryNo=45



//-------------------------------------
// express Jade - 표현방법, 계층구조
//-------------------------------------


express는 화면을 구성하기 위한 뷰 템플릿 엔진으로 Jade와 ejs 등을 지원한다.
Jade는 Haml (HTML Abstract MarkUp Language)의 영향을 받은 자바스크립트 위에서
Haml은 HTML을 위한 경량화 마크업 언어로서, 즉시 처리하는 기존의 인라인 코딩 방식을 따르지 않고,
콘텐츠를 동적으로 표현할 수 있는 언어이다.


- 태그의 표현 방법 -


Jade 문법으로 표현

html
  head
  body


결과 : <html><head><body></body></head></html>

코드가 아주 단순해지는 것을 볼 수 있다.


//-------------------------------------
// express Jade - 태그의 ID, 클래스, 속성 표현
//-------------------------------------


- 태그의 ID 표현 -

jQuery를 비롯한 많은 자바스크립트 라이브러리들이 ID를 지칭할 떄 #를 이용하는 것을 본적이 있을 것이다.
Jade 역시 태그 이름 뒤에 번호기호(#)을 붙이고 ID를 적어줌으로서 해당 HTML 요소에 대해 
고유한 이름을 부여할 수 있다.

Jade 문법으로 표현

html
  head
  body
    div#stoneDiv1
    div#stoneDiv2


   결과
  <html>
    <head></head>
    <body>
       <div id="stoneDiv1"></div>
       <div id="stoneDiv2"></div>
    </body>
  </html>


- 태그의 클래스 표현 -

jQuery를 비롯한 다른 라이브러리들에서 많이 사용하는 방법으로 HTML 요소에 부여된 클래스를 
지칭하는 방법과 마찬가지로 온점(.)을 이용하여 클래스 이름을 부여할 수 있다.


Jade 문법으로 표현 
   html
     head
     body
       div.stoneDiv1
       div.stoneDiv2
       div.stoneDiv2
       div.stoneDiv2
 
 
   결과
  <html>
    <head></head>
    <body>
      <div class="stoneDiv1"></div>
      <div class="stoneDiv2" class="divStyle1"></div>
    </body>
  </html>

<div>는 가장 많이 쓰이는 태그이기 떄문에 Jade는 이를 생략하더라도 <div>러 인식하여 동작한다.
아래 코드를 살펴보면 <div>를 기술하지 않고 ID나 클래스 이름을 부여하면 자동으로 <div>로 렌더링 된다는
것을 확인할 수 있다.


html
  head
  body
    #stoneDiv1
    #stoneDiv2
    .divStyle2

   결과
  <html>
    <head></head>
    <body><div id="stoneDiv1"></div>
      <div id="stoneDiv2" class="divStyle1"></div>
      <div class="divStyle2"></div>
    </body>
  </html>


- 태그의 속성 표현 -

ID나 클래스와 같이 대표적인 속ㅅㅇ은 쉽게 표현할 수 있었다. 
Jade에서는 괄호를 이용하여 나머지 속성들을 기술할 수 있다.

#contents(style="boder:1px soild black;")
   input(type="checkbox", checked)


결과
<div id="contents" style="border:1px solid black;">
   <input type="checkbox" checked />
</div>


contents라는 ID를 가진 <div>에 괄호를 통해 스타일 속성을 부여하였다. 
그리고 이 <div>에 속해 있는 <input> 태그에도 type과 checked 속성을 부여하였다. 
이 처럼 여러 속성을 동시에 부여할 때는 반점(,)을 이용하면 된다.


//-------------------------------------
// express Jade - 태그 콘텐츠 표현
//-------------------------------------

- 태그 텍스트 표현 -

태그 내부의 텍스트, 즉 우리가 화면에 보여주고자 하는 정보를 표현하는 방법은 아주 간단하다.
태그에 대한 서술이 끝나면 뛰어쓰기 후에 표현하고자 하는 텍스트를 기술하면 된다.

html
  head
  body
    div#stoneElenent1 Hello Jade! Stone~


결과 
<html>
  <head></head>
   <body>
      <div id="stoneElement1">Hello Jade! Stone~</div>
   </body>
</html>


만약 표현하고자 하는 텍스트가 길다면 세로선(|)을 통해 다음 줄에서 이어서 표현할 수 있다.

html
  head
  body
    dir#stoneElenet1
    | stoneisp.pe.kr
    | cafe.naver.com/buldon


    결과 
    <html>
      <head></head>
      <body>
         <div id="stoneElement1">stoneis.pe.kr cafe.naver.com/buldon</div>
      </body>
   </html>


- 동적 콘텐츠 표현 -

Jade는 뷰 템플릿 엔진으로 동적 콘텐츠를 표현할 수 있다. 다시 말해 서버에서 가공한 데이터를 
Jade를 통해 만들어놓은 틀에 맞게 출력할 수 있다는 의미이다. 이떄 모든 정보는 JSON 형태로 주고 
받게 되는데 이렇게 전달 받은 데이터는 Jade 문법으로 아주 간단히 출력할 수있다.

만약 express가 Jade 엔진에 {"name": "stone", "age": "30"} 이라는 JSON 데이터를 보냈다고 하자.
이것을 Jade에서 적절한 위치에 출력하려면 다음과 같이 #{fielname}으로 기술하면 된다.

html
  head
  body
    div#userName #{name}
    div#userAge #{age}


    결과 
    <html>
      <head></head>
      <body>
         <div id="userName">stone</div>
         <div id="userAge">30</div>
      </body>
   </html>


전달하는 JSON 데이터에 값이 HTML 태그를 포함하고 있다면 HTML 태그가 표시되지 않는다.
예) {"content": "<strong color='red'>Stone</strong>"} 일 시

...
div#stoneElement1 #{conent}
...

HTML 코드로 동작하려면, 이스케이프되지 않은 상태로 출력해야 한다. 따라서, !{fileName} 으로 출력한다.


...
div#stoneElement1 !{conent}
...


//-------------------------------------
// express Jade - 자바스크립트와 CSS의 표현
//-------------------------------------

자바스크립트나 CSS는 여러 줄로 표현홰야 하는 경우가 많은데, Jade 에서는 <script> 와 <style> 태그에 한해서
세로선(|)을 사용하지 않고도 여러 줄로 구성된 코드 기술을 지원한다.

html
  head
    title Example
    script
      if (true) {
        alert('true');
      }
      else {
        alert('false');
      }

   결과
   <html>
      <head>
         <title>Example</title>
         <sciprt>
            if (true) {
              alert('true');
            } else {
              alert('false');
            }
         </script>
      </head>
   </html>



//-------------------------------------
// 주석 쓰기
//-------------------------------------

Jade에서는 주석을 다른 프로그래밍 언어들 처럼 //을 이용하여 작성할 수 있다.


  Jade 문법으로 표현
   //just some comments...
  div#stoneDiv
 
 
   결과
   <!-- just some comments... --->
   <div id="stoneDiv"></div>


만약 Jade 파일에서 주석을 표현하고 싶은데, 실제 출력 시에는 주석을 생략하고 싶다면 
'//-'를 붙여서 기술하면 된다.


  Jade 문법으로 표현
   //-just some comments...
  div#stoneDiv
 
 
   결과
   <div id="stoneDiv"></div>


//-------------------------------------
// 블록 단위로 주석
//-------------------------------------

블럭 단위 주석은 HTML 태그를 기술하는 원리와 같다. 다시 말해, 
들여 쓰기를 통하여 블록 단위로 여러 줄의 주석을 작성할 수가 있다.

div#parentDiv
  //
    #childDiv
      h1 blog.naver/com/musasin84

   
   결과
   <div id="parentDiv">
      <!--
      <div id="childDiv">
          <h1>blog.naver.com/musasin84</h1>
      </div>
      -->
   </div>



































