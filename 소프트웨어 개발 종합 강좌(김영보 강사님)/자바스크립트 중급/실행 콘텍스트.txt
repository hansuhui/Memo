참조 : http://juheejin.tistory.com/entry/%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%8A%A4%ED%84%B0%EB%94%945-%EC%8B%A4%ED%96%89%EC%BB%A8%ED%85%8D%EC%8A%A4%ED%8A%B8%EC%99%80-%ED%81%B4%EB%A1%9C%EC%A0%80

function music(title){
	var musucTitle  = title; 
	
}
music('음악');

/*
  1. music('음악'); 형태로 함수를 호출하면
  -엔진은 실행 콘텍스트를 생성하고 실행 콘텍스트 안으로 이동합니다.
  -실행 콘텍스트에서 함수 코드를 해석하고 실행합니다.
  -개념적으로 실행 콘텍스트에서 아래 처리를 합니다.
  -번호는 순서가 아닌 나열을 위한 것으로 특별하게 의미가 없습니다.
  
  //실행 콘텍스트 처리
  1. music() 함수를 호출하면서 "음악"을 파라미터로 넘겨줍니다.
  2.실행 콘텍스트를 생성합니다.
  3.렉시컬 환경 컴포넌트를 생성합니다.
  4.변수 환경 컴포넌트를 생성합니다.
  5.this 바인딩 컴포넌트를 생성합니다.
  6.호출한 함수 앞에 작성한 오브젝트를 this 바인딩 컴포넌트에 설정합니다.
  -설명 this.value 형태로 프로퍼티를 처리할 수 있게 됩니다.
  
  7.렉시컬 환경을 생성합니다.
  8.환경 레코드를 생성하여 렉시컬 환경에 첨부합니다.
  -설명 여기에 함수 안에 작성한 함수,변수를 바인딩합니다.
  9. 외부 렉시컬 환경 참조를 생성하여 렉시컬 환경에 첨부합니다.
  10.Function 오브젝트의 [[Scope]]를 외부 렉시컬 환경 참조에 설정합니다.
  11.렉시컬 환경을 렉시컬 환경 컴포넌트와 변수 환경 컴포넌트에 설정합니다.
  12.호출한 함수의 파라미터 값을 호출된 함수의 파라미터 이름에 매핑합니다.
  13.함수 선언문을 Function 오브젝트로 생성합니다.
  14.함수 표현식과 변수에 초깂값을 설정합니다.
  15.함수 안의 자바스크립트 코드를 실행합니다.
  
  // 추가 설명
  1.3번에서 11번까지 준비 단계이고
  --12번 , 13번 , 14번이 초기화 단계입니다.

 2.15번 이외의 모든 처리는 자바스크립트 엔진 내부 처리입니다.
  -따라서 실행 콘텍스트와 렉시컬 환경을 이해하지 못하고
  -함수에 작성된 코드를 논하는 것은 근거없는 논쟁이  될 수 있습니다.
  
  3. 실행 콘텍스트와 렉시컬 환경을 정확하게 이해하게 되면
  - 실행 결과에 대한 처리 과정을 증명할 수 있습니다.
  
  
  
*/