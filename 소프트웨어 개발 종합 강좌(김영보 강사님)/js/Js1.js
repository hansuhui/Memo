window.onload = function() {

	/*----------------------------------------------------
	 * 16진수 js.log("0xf :",0xf);
	 * 
	 * js.log("0xff :",0xff); js.log("0xff :",(16*15+15));
	 * 
	 * js.log("0xfff :",0xfff); js.log("0xfff :",((16*16*15)+(16*15)+15));
	 * 
	---------------------------------------------------- */

	/*----------------------------------------------------
	 * 유니코드
	 * 
	 * js.log("\u0030");
	js.log("\u0039");

	js.log("\u0041");
	js.log("\u0061");

	js.log("한글 유니코드");
	js.log("\u1100");
	js.log("\uac00");
	js.log("\uac01");
	js.log("\uac02");

	js.log("\uad03");
	----------------------------------------------------*/

	/*
	 * ----------------------------------------------------
	 * 
	 * Boolean 타입 // 값을 넣지 안으면 나옴 // 하지만 값을 할당 가능해서 반드시는 아님 var 사장님;
	 * js.log(사장님); js.log(undefined); // 값이 없다는 건 같으나 undefined과 차이는 // null은
	 * 값을 할당해야 한다는것!! var 헐 = null; js.log(헐);
	 * 
	 * js.log(true); js.log(false); js.log(2 + true); js.log(2 + false);
	 * 
	 * if (0) { js.log("0:true"); } else { js.log("0:false"); }
	 * 
	 * if (null) { js.log("null:true"); } else { js.log("null:false"); }
	 * 
	 * 
	 * if (undefined) { js.log("undefined:true"); } else {
	 * js.log("undefined:false"); }
	 */

	/*
	 * //String 타입 var player = 11; var sports = "축구";
	 * 
	 * //숫자는 문자열을 만나기 전까진 덧샘을 하고 //문자를 만나면 문자로 취급되여 연결된다.
	 * 
	 * js.log("1:",sports+player); js.log("2:",'A'+1+2); js.log("3:",1+2+'A');
	 * js.log("4:",1+2+'A'+3+4);
	 * ----------------------------------------------------
	 */

	/*
	 * ---------------------------------------------------- //NaN //타입이 아니라 값이므로
	 * 출력단다.
	 * 
	 * js.log(NaN);
	 * 
	 * //undefined 자체는 값이지만 값이 아니므로 //더하기를 하면 NaN
	 * 
	 * js.log(1+undefined);
	 * 
	 * //null을 더하면 0으로 변환하여 더하기를 한다. js.log(null+1);
	 * 
	 * 
	 * //문자열 더하기 됨 js.log("A-"+undefined); js.log("A-"+null);
	 * 
	 * ----------------------------------------------------
	 */

	/*----------------------------------------------------
	//Infinity
	
	js.log(Infinity);
	js.log(-Infinity);
	
	js.log("");
	js.log("Infinity+1",Infinity+1);
	js.log("Infinity-1",Infinity-1);
	
	js.log("-Infinity-1",-Infinity-1);
	js.log("-Infinity+1",-Infinity+1);
	----------------------------------------------------*/

	/*----------------------------------------------------
	//Object 타입
	
	var sports = {plater : 11 , item : '축구'};
	
	js.log(sports.player);
	js.log(sports['player']);
	
	//key 프로퍼티에 접근하여 값을 설정
	sports.player = 22;
	js.log(sports.player+22);
	----------------------------------------------------*/

	/*----------------------------------------------------
	//typeof 연산자
	js.log(typeof null);
	js.log(typeof true);
	js.log(typeof 123);
	js.log(typeof "sports");
	js.log(typeof {key:'value'});
	js.log(typeof function sports(){});
	----------------------------------------------------*/

	/*----------------------------------------------------
	 * //+연산자
	js.log(1+2);

	//한쪽이라도 표현식 평가 결과가 문자열이면 연결
	js.log("123"+ "500");
	js.log(123+ "500");
	
	var value = 123 + "";	
	js.log(typeof value);
	
	//10+20후 연결
	js.log(10+20+"ABC");
	
		
	js.log(10+undefined);
	js.log(null+10);
	js.log(10+true);
	js.log(10+false);
	js.log(10+"123");
	js.log(10+"abc");
	
	
	----------------------------------------------------	*/
	/*
	 * ------------------[-연산자]---------------------------- js.log(30-20) ;
	 * js.log("50"-20); js.log(30-"20"); js.log("70"-"20"-"10");
	 * 
	 * js.log(20-null); js.log(20-true); js.log(20-false); // 숫자 값으로 변환한 값이 NaN
	 * js.log(20-undefined);
	 * ----------------------------------------------------
	 */

	/*
	 * ------------------[*연산자]----------------------------
	 * 
	 * js.log(20*"12"); js.log(20*true); js.log(20*false); js.log(20*null);
	 * js.log(20*Infinity); // 6.9가 출력되지 않음 : 정상처리 js.log(2.3 * 3); // 실수를 정수로
	 * 반환하여 연산하고 // 정수를 실수로 변환한다. js.log(2.3 * 10 * 3 / 10);
	 * 
	 * 
	 * ----------------------------------------------------
	 */

	/*
	 * ------------------[/연산자]----------------------------
	 * 
	 * 
	 * 
	 * js.log(4/3); js.log(0/25); js.log(3/0);
	 * 
	 * js.log(3/'A'); js.log(0/0);
	 * 
	 * js.log(12/true); js.log(12/false); js.log(12/null);
	 * 
	 * 
	 * ----------------------------------------------------
	 */

	/*
	 * ------------------[%연산자]----------------------------
	 * 
	 * 
	 * js.log(3%2); js.log(3%3); js.log(3%4);
	 * 
	 * js.log(5%2.5); js.log(5%2.4); js.log(5-(2*2.4));
	 * js.log(5-((2*2.4)*10)/10);
	 * ----------------------------------------------------
	 */
	
	

	/*------------------[단항 +,-연산자]----------------------------
	 
	
	var two = 2,
	twoPlus = +two;
	
	js.log(twoPlus);
	
	var six = '6', five = 5;
	
	js.log(six+five);
	
	js.log(+six+five);
	
	js.log(five+ +six);
	
	five = -five;
	five = -six;
	
	js.log(-five);
	js.log(-six);
	
	js.log(five+six);
	
	----------------------------------------------------*/
	
	
	/*------------------[후치 ++연산자]----------------------------
	 
	
	var plus = 1;
	
	js.log(5+plus++);
	
	js.log(plus);
	
	var two =2;
	var value = two++ +1;
	js.log(value);
	
	value = 7;
	value++;
	js.log(value);
	
 ----------------------------------------------------*/
	
	
	
	/*------------------[전치 ++연산자]----------------------------
	var plus =2;
	var value = ++plus + 5;
	js.log(value);
	 ----------------------------------------------------*/
	
	
	
	
	
	/*------------------[논리 !연산자]----------------------------
		var value = true;
		js.log(!value);
		
		js.log(value);
		//5를 true로 인식하며 반대로 출력
		js.log(!5);
		
		js.log(!!"A");
	 ----------------------------------------------------*/
	
	
	
	
	
	
	/*------------------[비트 ~연산자]----------------------------
	 
	js.log(~0);
	
	js.log(~-1);
	js.log(~5);
	js.log(~-5);
	
	 ----------------------------------------------------*/
	
	
	
	
	
	
	/*------------------[> 연산자]----------------------------

	
		 js.log("\u0031",",","\u0032");
		 js.log("\u0041",",","\u0062");
		
		 //2와 A가 1보다 뒤에 있음
		 js.log("2>1 : ",2>1);
		 js.log("A>1(문자) : ","A">"1"); //문자열로 비교
			
		 
		 // 소문자가 대문자보다 뒤에 있음
		 js.log("A>1 : ","A">1);
		 //소문자가 대문자보다 뒤에 있음
		 js.log("A>a : ","A">"a");
		 //A는 같으나 다음에 0과 2를 비교하므로 false
		 js.log("A01>A2 : ","A01">"A2");
		 
		 //가 와 나 값이 아닌데 비교할수 있는것은
		 //유니코드 사전 순서로 비교하기 떄문에 가능
		 js.log("가>나 : ","가">"나");
		 js.log("다>나 : ","다">"나");
	
	 ----------------------------------------------------*/
	
	/*------------------[> 연산자]----------------------------
	 ----------------------------------------------------*/
	
	
	
	
	
	

};