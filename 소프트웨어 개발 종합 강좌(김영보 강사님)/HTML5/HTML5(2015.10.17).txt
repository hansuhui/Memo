-Edit-

[ins]

-다큐먼트에 콘텐츠 추가

[ins속성]

-cite
텍스트 추가의 원인, 이유가 작성된 URL

-datetime
추가한 시간

[del]

-다큐먼트에 콘텐의 삭제

[del속성]

-cite
텍스트 삭제의 원인, 이유가 작성된 URL

-datetime
추가한 시간


---------------

[DOM 트리]

-DOM(Document Object Model)

-DOM 트리
엘리먼트(노드)가 구조적으로 연결된 형태
선조,페어런트, 자신 ,형제 차일드, 자선
HTML 4 : DOM 트리의 구조 중심


[HTML5 구성 개념]

-구성 개념
독립적인 형태로 다른 엘리먼트에 영향을 미치지 않음
DOM트리는 중간에 엘리먼트가 없어지면 영향을 미치지만
구성은 독립적이므로 들어내더라도 영향을 미치지 않음

-연상되는 이미지
책 목차의 장.절.항 : 절이 빠져도 상관없음
주차장: 차가 빠져나가도 전체에 영항을 미치지 않음


[section]

-section
DOM 트리에서 일부 노드로 구성된 컨테이너
구조가 아닌 구성 개념으로 접근하기 위한 단위
구성 단위는 엘리먼트에 따라 다름
독립적으로 구성된다는 뉘앙스

-각 섹션은 하나의 섹션 헤더를 가질 수 있다
헤더 기능을 하는 엘리먼트를 가질 수 있다면 섹션이 될 수 있다.
갖는다는 것은 차일드 위치를 위미

-네스트(nest)된 섹션을 포함할 수 있다.
네스트:DOM 트리를 전개한 모습으로 엘리먼트 안에 엘리먼트가 있는 구조적인 모습
즉, 섹션 안에 섹션이 존재할 수 있다.

[컨텐츠 모델]

-Content Model
엘리먼트의 콘텐츠 요건을 설명한것
모든 엘리먼트는 콘텐츠 모델을 갖음 <template>은 제외

-갖는다(사용 할)
차일드 위치를 의미
콘텐츠 모델은 차일드 위치에 작성할 콘텐츠 요건을 설명한 것

-속한다(사용 될)
엘리먼트 정의의 컨텍스트(content)


[카테고리]

-카테고리
비슷한 특징을 가진 엘리먼트들을 모아 놓은 그룹
엘리먼트는 0개 이상의 카테고리에 속함
카테고리에 속하지 않는 엘리먼트도 있음 <li> , <dt> 등

-카테고리 종류
Metadata content
Flow content (가장 넓음)
sectioning content
Heading content 
phrasing content
Embedded content
Interactive content


[카테고리 관계]

-플로우 콘텐츠는 다른 케테고리 특징을 갖고 있음
-중복된 것은 엘리먼트가 카테고리 특징을 중복해서 갖고 있다는 의미
-예 : <ruby>의 카테고리는 플로우 콘텐츠와 프레이징 콘텐츠



-임베디드 Content-


[img]

-이미지 표현
레이아웃 용도로 사용 금지(1px)
<img src="이미지">


-이미지 대체 텍스트 중요
이미자가 표시되지 않았을 때 alt 속성에 텍스트로 작성


[img 속성]

align / 이미지 배치 위치
alt / 이미지 대신 표시할 텍스트
border / 이미지 테두리 폭(픽셀)
src / 이미지 파일의 URL

-src
이미지 파일의 URL
정적 비트맵(PNG, GIF,JPEG),백터 다큐먼트(한 페이지의 PDF, SVG, XML 파일)이 대상
스크립트가 포함된 SVG, 다수 페이지의 PDF, HTML 다큐먼트 등은 URL 지정 불가

-alt
폴백 콘텐츠 : 이미지 표시되지 않았을 때 대체하여 표시할 텍스트
<img src="" alt="이미지 정보" title="">
대체 텍스트 기준이 있음
접근성도 있음
장애우들을 위한 스크린 리더에서 처리


-width, height
이미지 넓이와 높이를 픽셀로 지정



[iframe]

-다큐먼트 안에 브라우징 콘텍스트를 갖는 형태
HTML5 스펙에서는 nested browsing context로 표기 (일종의 탭의 형태)
<iframe> ,<iframeset> , <noframes> 폐기
<iframe src="path" with=350 height=30></iframe>

[iframe 속성]

-srcdoc
iframe에 포함시킬 콘텐츠 작성
src와 srcdoc를 작성하면 srcdoc가 우선하여 작용
src와 srcdoc를 모두 작성하면 src는 폴백 콘텐츠 역할
<iframe srcdoc="<p>" >


-a태그로 iframe 네임을 타켓으로 지정하면 해당 iframe href 연결


[embed]

-외부 지원에 대한 통합(provides)을 제공
일반적으로 HTML이 아닌 애플리케이션 또는 양방향 콘텐츠
HTML4에서는 비표준이었으나 HTML5에서 표준이 됨
<embed src="Best5.ogg">  오디오 파일



[object]

-외부 콘텐츠 표현
외부 애플리케이션 실행을 위한 파라미터는 <param>에 작성
<object> 와 </object> 사이에 폴백콘텍츠를 넣음 data가 없을때 

<object data="">
/<img src=""></img>
</object>


[object 속성]

data / 외부 콘텐츠 URI
form / object와 관련된 from 엘리먼트 #id
hspace / object 좌우의 수평 여백(픽셀)
type / MIME 타입

-data 또는 type 중에서 반드시 하는 지정


[param]

-<object> 에서 호출하는 곳에 넘겨줄 파라미터
파라미터 형태
이름(name), 값(value)
<object data="" type="">
<param name="" value="">
</object>


[map]

-이미지 맵 정의
<img> 와 <map>의 차일드인 <area>를 조합하여 이미지 맵 정의

[area]

-하이퍼 링크 , 이미지 맵
텍스트를 가진 하이퍼링크 표현
이미지 맵에 대응하는 영역표현
선조가 <map> 또는 <template> 이어야 함

[area 속성]

coords / 영역의 자표값
download / 다운로드 파일명
href / 링크할 URL
hreflang / 링크할 언어

-shape 
이미지 맵 형태 : rect 사각형 , circle 원 , poly: 원 , 디폴트 : rect

-coords
이미지 맵 형태의 영역 좌표 : 픽셀


-Media Element-

[video]

-동영상 플레이(재생)
엘리먼트에서 접근성을 지우너하지 못하므로 별도 장치 필요

[video속성]

autoplay / 자동으로 비디오 플레이(재생)
controls / 비오디 제어를 위한 유저 인터페이스 제공
crossorigin / 크로스 오리진(SOP)
loop / 반복재생
poster / 재생 전에 표시할 포스트 프레임(poster frame)
preload / 미디어 버퍼링 량 힌트을 브라우저에 제공
src  / 비디오 파일의 URL


스펙 찾아서 보기

-poster
비디오를 플레이(재생)하기 전에 표시할 이미지 파일
표시할 비디오가 엇을 때 표시하는 것이 목적
재생할 비디오가 있더라도 먼저 이미지를 표시
autoplay을 지정하면 잠깐 나오고 바로 재생

-preload
브라우저에 비디오 처리 힌트 제공
빈 문자열을 작성하면 auto로 간주
속성을 작성하지 않으면 브라우저가 디폴트 값을 결정
HTML 스펙 추전 :matadata , 서버의 로드 절감과 최적의 사용자 경험의 타협점을 위해
<video src=""  preload=matadata>


[audio]

-소리, 음성 스트림(stream)제공
비디오 기능을 제외한 기능은 <video>와 같음
<audio src="">

[audio 속성]

video속성이랑 같은 점이 많음


[source]

-미디어 자원 지정
video, audio의 차일드로 작성
선택 가능한 미디어 자원을 복수 지정 가능
작성한 것 중에서 브라우저가 지원하는 타입 실행
<audio controls>
//의도적으로 존재하지 않는 파일을 지정하였음
<source src="path" type="audio/ogg;codecs=vorbis">
<source src="path2" type="audio/ogg;codecs=vorbis">

[source 속성]

-type
원천파일의 타입 지정
코텍및 등등 지정


[track]

-외부의 동기 텍스트 트랙 지정
비디오 파일에 자막을 표시하는 형태

[track 속성]

kind / 텍스트 track 타입 , 디폴트 subttiies 열거형 속성
src / 지원파일 URL
srclang / 텍스트 트랙 언어
label / 사용자에게 보여지는 라벨
default / 보다 적절한 텍스트 트랙이 없음


-Sections-

[HTML5 키워드]

-마크업(Mark-up)
-하이퍼링크(HyperLink)
-구조(DOM Tree), 구성(Outline)
-시맨틱(Semantic)
-콘텐츠 모텔(Content Model)
-오브젝트(Object)
-데이터(Data)

[Section 범위]

-body
-article
-section
-nav
-aside
-h1 ~ h6
-header
-footer
-address
-Heading
-Outline

[HTML5 스펙 범위]

-vocabulary : 사전적 의미 (어휘,용어 범위)
용어의 설명 기능 , 사상이 스펙에 작성되어 있다.
이를 이해하지 못하고 HTML5를 거론해서는 곤란하다는 뉘앙스

-API : Application Programming Interface
객체 개념으로 접근해달라는 뉘앙스
즉, HTML5의 밑바탕은 object(객체)다.
오브젝트를 활용해야 HTML5를 완전하게 표현할 수 있다.
Object를 사용하기 위한 언어(자바스크립트)가 필요하다.

☆콘텐츠 모델러★

[h1~h6]

-섹션의 헤딩(제목/표제) 표현
표제는 장/절/행의 제목 (섹션 안에 섹션/차일드로 들어감) 
섹션 또는 서브 섹션의 헤딩으로 사용

-h1~h6에서 숫자는 랭크(rank)를 나타냄
1이 가장 높고 6이 가장 낮음

-사용불가
헤딩의 서브 헤딩, 서브 타이블 , 대체 타이블


[HTML5 이전의 구성]

<body>
<h1>마우스
<p>마우스의 클릭,드래그

<h2>마우스 클릭
<p>마우스 클릭은 선택을 의미

<h3>왼쪽 버튼 클릭
<p>일반적인 선택 방법

<h3>오른쪽 버튼 클릭
<p>컨텍스트 메뉴 표시

<h2>마우스 드래그
<p>선택하여 끄는 것
</body>


-아웃라인(구성) 모습

1.마우스
   1.마우스 클릭
     1.왼쪽 버튼 클릭
     2.오른쪽 버튼 클릭
   2.드래그 

-h1 ~ h6으로 아웃라인 형성
<p>는 헤딩을 수식

-새로운 섹션 생성
<h1> <h2> <h3> 랭크가 내려가면 들여쓰기

-<h2>마우스 드래그 <h2>
서브섹션 생성 : 내어쓰기


[section]

-콘텐츠의 시맨틱 그룹
다큐먼트의 아웃라인(구성)을 구성
<section>의 주제는 <section>의 차일드인 헤딩(h1~h6)으로 표현 - 제목이란 소리 section 헤딩

-섹션의 예
책의 장, 논문에서 번호가 부여된 섹션
홈 페이지 웹 사이트 ,소개 , 뉴스 연락처 정보

-시맨틱 그룹이므로 CSS스타일, 스크립팅 편리를 위해 사용 불가
이러한 것은 <div> 추천


[section 아웃라인]


<body>
<h1>마우스
<p>마우스 클린은 선택을 의미

<section>
<h1> 마우스 클릭 ( section 헤딩)
<p> 설명
	<section>
	<h2> 왼쪽 버튼 클릭 ( section 헤딩)
	<p>설명
	</section>

	<section> 
	<h2> 오른쪽 버튼 클릭 ( section 헤딩)
	<p>설명
	</section>
</section>
<section>
<h1> 마우스 드래그 ( section 헤딩)
<p>설명
.....

-section의 style은 display:block이다.
-다른 프로퍼티는 하나도 갖지 않는다.
-이는 시맨틱 그룹핑이기 떄문

</body>

-section
섹션을 만드는 시맨틱 엘리먼트
nested <section>으로 장/절/항 모습이 됨
즉, 다큐먼트의 아웃라인(구성) 행성

-h1~h6 헤딩으로 섹션의 제목
<h1> 마우스 </h1> : body의 제목
<h1> 마우스 클릭</h1> : section의 제목

-아웃라인(구성) 모습
1.마우스
   1.마우스 클릭
     1.왼쪽 버튼 클릭
     2.오른쪽 버튼 클릭
   2.드래그 


[랭크와 섹션]

-섹션의 제목 표현
      섹셔닝 컨텐츠 엘리먼트에서 헤딩 컨텐츠의 첫번째 엘리먼트가 섹션 제목이 됨

-랭크 연속 작성
계속해서 같거나 높은 랭크가 작성되어 있으면 -> 묵시적으로 섹션 생성
계속해서 낮은 랭크가 작성되어 있으면 -> 앞 섹션의 서브 섹션으로 생성
두 형태 모두 엘리먼트가 섹션의 제목이 된다.
      
   <body>
      <h1>마우스</h1>
      <p>마우스의 클릭, 드래그 가능</p>
      <section>
         <h3>마우스클릭</h3>
         <p>마우스 클릭은 선택을 의미</p>
         <h5>왼쪽 버튼 클릭</h5>
         <p>일반적인 선택 방법</p>
         <h5>오른쪽 버튼 클릭</h5>
         <p>컨텍스트 메뉴표시</p>
         <h2>마우스드래그</h2>
         <p>선택하여 끄는 것</p>
      </section>
   </body>
   랭크로 들어쓰기/내어쓰기 개념으로 아웃라인을 구성하므로
   <h3><h5><h5><h2> 순서로 작성해도
   <h3><h4><h4><h3> 형태로 구성되어 문제가 되지 않는다.
   하지만 랭크 대신에 <section>을 사용하면 랭크에 신경쓰지 않아도 되며
   <section>으로 섹션과 서브섹션을 구분할 수 있으므로 가독성이 높다.



[sectioning root]

-독립적인 아웃라인 형성
다른 섹션의 아웃라인에 영향을 미치지 않음
서브 섹션이 되지 않음

-엘리먼트
<blockquote> , <body> , <fleidset>
<figue> , <td>



[body]

-<body>의 카테고리는 Sectioning root
따라서 해당 콘텐츠(h1~ h6)로 제목을 표현해야한다.
<title>은 다큐먼트의 타이틀이고
해당 콘텐츠는 콘튼체(body)의 제목

<body>
<h1>마우스</h1>
<p>마우스의 클릭, 그래그 기능</p>
<section>
<h2>마우스 클릭</h2>
<p>마우스 클릭은 선택을 의미</p>
</section>
<p id="acess">마우스를 사용할 수 없는 사용자를 생각해야...</p>
</body>


[header]

-섹션의 헤딩 표현
대상:선조 위치에서 가장 가까운
sectioning content 또는 sectioning root 엘리먼트
따라서 다수의 <herder>가 존재할 수 있음
일반적을 소개 , 네비게이션 그룹 작성
섹션 콘텐츠의 목록 , 검색 폼 , 로고 작성

-그룹화를 위한 엘리먼트로
아웃라인에 영향을 미치지 않음

-대상이 <body>이면
전체 콘텐츠의 헤딩 표현

-헤딩 콘텐츠 사용은 선택
<h1> ~ <h6>

[footer]

-섹션의 푸터 표현
대상:선조 위치에서 가장 가까운
sectioning content 또는 sectioning root 엘리먼트
작성자 , 관련 문서의 링크 ,저작권 , 데이터 등

-<footer>가 전체 섹션을 나타낼 때
부록, 색인 , 상세한 판권 설명
자세한 라이센스 동의 문장 등의 콘텐츠

-그룹화를 위한 엘리먼트

-<footer> 안에 <address>
섹션의 저작권자
편집자의 연락처 정보

-작성 위치
섹션의 처음 또는 아래
일반적ㅇ로 아래이지만
콘텐츠에 따라 위치 결정


예로 section 안에도 들어감 꼭 하나만 들어가지 않는다.
어느 영역에 footer로 표현가능


[article]

-독립적으로 배포, 재사용 가능한 콘텐츠
다큐먼트 , 페이지, 사이트 구성에 있어
완전하거나 독립적인 콘텐츠
섹션을 떼어내어 재배포, 재사용 가능
포럼, 신문/ 잡지의 기사 , 블로그 글
댓글 , 위젯 , 가젯 , 독립적인 콘텐츠 등

-<article>을 작성하지 않아도 되는 경우
페이지의 주요 콘텐츠(헤더,푸터,네비게이션,사이드 바 제외)가
하나로 구성되고 자체로 콘텐츠가 완성될 때는 <main>만 사용해도 된다.

-nested <article>
안에 <article>은 밖의 <article>과 관계 있음
예: 블로그 글에 사용자가 작성한 댓글



[nav]

-주요 네비게이션 링크 섹션
다른 페이지의 링크, 페이지 내의 링크
외부 링크가 주요 네비게이션 대상
서비스 조건 , 홈페이지, 저작권 페이지와 같이
사이트 내의 페이지 링크는
footer 사용이 일반적(필수 아님)

-링크가 리스트 형태일 때
네비게이션 해석이 쉽도록 ul,ol,li 사용

접근성이 기기에서 활용
스크린리더 등에서 <nav> 활용 방법이 스펙에 작성되 있음
적극 사용 권장


[aside]

-메인 콘텐츠에서 분리해도 영향이 없는 콘텐츠 섹션
인쇄물의 사이드바(sidebar),광고 , <nav>그룹화, pull quote (구글 광고 같은거 글 안에 있는거 )
기준이 애매한 점이 있음


[address]

-연락처 정보
대상: 선조 위치에 가장 가까운 <article> 또는 <body>
<body> 이면 다큐먼트 전체에 반영
일반적으로 <footer> 에 작성

-연락처 정보 형태
URL 또는 이와 유사한 형태 
정확하지 않은 연락처 작성 불가
우편번호, 주소 형태가 아니며 이 형태는 <p> 사용



[HTML5 콘텐츠 모델링]

http://cafe.naver.com/requirements/1245



-Tabular data-

[테이블은 데이터 이다. 디자인 목적으로 사용하면 안된다.]

-데이터이기 때문이다.
-접근성 때문이다. 스크린리더가 읽기가 힘들다.



[Tabular data]

-Tabular data
테이블 형태의 데이터
데이터 중심 접근을 암시
그리드 형태로 인한 접근성의 어려움 암시

스크린리더가 읽을수 있도록 !!!!



[Tabular data 용어]

-테이블 모델
다양한 <table> 엘리먼트와 관련된 속성을 정의하는 것

-슬롯 : slot
2차원 그리드(grid)에서 하나 하나를 지칭, 좌표(x,y)를 가짐
즉 , [0,0] , [0,1] 형태의 배열


[table]

테이블 작성 

1 : <caption> (선택)
2. 0개 이상의 <colgroup>
3. 하나의 <thaed> (선택)
4. 하나의 <tfoot> (선택)
5. 0개 이상의 <tbody> 또는 하나 이상의 <tr>
6. <tfoot>(선택), 단 , 합계로 하나만 작성 가능
7. 선택이며  하나 이상의 <script> 또는 <tamplate>

-테이블 형태로 테이터 표현
하나 이상의 차원(dimesion) 데이터 표현


[레이아웃 , 사용금지]

-레이아웃 목적으로 <table> 사용 금지
오래전부터 페이지 레이아웃에 사용했지만 , 잘못된 접근
다큐먼트에서 테이블 형식 데이터의 추출 방해

-접근성
스크린 리더 등의 접근성 툴이 페이지를 읽는데 어려움이 있음

-CSS 테이블 모델 사용 :
테이블을 사용하지 않소 레이아웃 할 수 있는 방법 있음

-레이아웃 용도로 사용하려면
<table>에 role=presentaion 작성

-<table>에 border 속성 작성
style 아닌 속성
레이아웃 목적으로 사용하지 않는다는 것을 명시적으로 나타냄
특정 브라우저가 데이터 목적으로 인식
border 선이 그려짐

[table 속성]

cellpadding / 셀과 테두리 선 사이 간격
cellspacing / 셀과 셀 사이의 간격
frame / table의 바깥선 표시 형태
rules / table의 내부선 표시 형태
summary / table의 목적 , 구조에 대한 설명 / 폐기 caption으로 대처

-css 사용
table의 모든 속성이 css로 넘아감


[caption]

-table 의 타이블
table의 첫 번째 차일드로 작성
figure에 다른 콘텐츠가 없으면서 <table>을 작성한 경우
figcaption을 작성하고 caption은 작성하지 않음

-테이블의 콘텐츠 설명 작성
타이틀 만으로 테이블 테이터를 이해하기 어려울때
p,div와 같은 다른 엘리먼트를 사용하여 설명 작성


[caption 작성 형태]


-caption 에 타이틀 작성
<catpion>제목</catpion>


-figcation 작성 : caption 작성 안함
<figure><figcation><strong>사용 안함 </strong></figcation></figure>



[colgroup]

-테이블 열(column) 그룹
<colgroup span=2>

[colgroup 속성]

-span
<colgroup>에 col를 작성하지 않은 경우
span 속성에 그룹화하려는 칼럼 수 작성
span에 css 스타일을 작성하면 th에는 반영되지 않고 td에만 반영


[col]

-테이블 칼럼(column) 표현
colgroup의 차일드로 작성
col 단독으로 사용불가
colgroup에 span 속성을 작성하면 col작성 불가
col에 span 속성을 작성하여 그룹화 가능
<col span=2>


[thead]

-테이블의 행 블록 표현
차일드의 <tr><th><td>에서 칼럼을 정의한다.


[tbody]

-테이블 바디(body)의 행 블록


[tfoot]

-테이블 푸터의 행 블록
테이블 각 칼럼의 합계를 표현하는 행 블럭


[tr]

-테이블에서 셀(cell)의 행(row) 표현



[th]

-테이블의 헤더(header)셀 표현
<th scope="row">  scope 범위를 나타냄


[<th> scope]

-th와 관련된 방향(행,열)을 일괄 지정
접근성을 위한 속성 : 스크린리더가 데이터를 읽는 방향 지정

-scope 속성 키워드

row / 헤더 셀과 같은 행에 속한 셀에 적용
col / 헤더 셀과 같은 열에 속한 셀에 적용

[td]

-테이블의 데이터 셀 표현
카테고리 : 섹셔닝 루트
독립적으로 아웃라인 형성 : 아웃라인에 영향을 미치지 않음

[th ,td 공통 속성]

-rowspan
가로로 합하려는 셀(슬롯)수

-colspan
세로로 합하려는 셀(슬롯)수

-headers
속성을 작성한 셀과 헤더 셀을 관련되게 함
th의 id 속성 값을 지정
접근성을 위한 속성
<thard><tr><th id="year">2011년</th><th id="amount">매출액</th>
<tbody><tr><<td headers="year">전자제품</td><td headers="amount">500원</td></tr>

















