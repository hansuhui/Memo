[every()]
every 메소드는 반환 값이 false가 될 때까지 콜백 함수를 실행합니다.

data위치의 배열을 하나씩 읽어가면서 첫 번째 파라미터의 콜백 함수를 호출하는 과정과
파라미터를 넘겨주는 방법은 앞에서 다루었언 forEach 메소드와 같습니다.
forEach는 전체를 반복하지만 every는 콜백함수에서 false를 넘기면 종료합니다.


20은 true 10에서 false가 들어가므로 반복을 끝낸다.
	[20,10,30].every(function(element, index ,list){
		js.log("value:" +element);
		return element > 15;
	});


[some()]

-개요
data 위치의 배열 엘리먼트를 하나씩 읽어가면서
반환값이 true가 될 떄까지 콜백 함수 호출
콜백 함수에 엘리먼트 값, 인덱스 , 전체 배열 순서로 넘겨 줌

콜백 함수에서 true를 반환하지 않으면 디폴트로 false를 반환

every()반대 개념이라고 생각하면 된다.


[filter()]

-개요
콜백 함수에서 true를 반환했을 때의 엘리먼트를 배열로 묶어 반환
콜백 함수에서 false를 반환하면 최종적으로 반환하지 않음
박복해서 읽는 것과 파라미터를 넘겨주는 것은 forEach()와 같음
조전에 맞는 엘리먼트를 추려낼 때 사용


[map()]

-개요
콜백 함수에서 반환한 값을 새로운 배열에 설정하여 반환
반복해서 읽는 것과 파라미터를 넘겨주는 것은 forEach()와 같음

[reduce()]

-개요
배열 끝까지 콜백 함수를 호출하고 콜백 함수에서 반환한 값을 반환
두 번째 파라미터를 작성하면 처리가 다름

-두 번째 파리미터를 작성하지 않은 경우
콜백 함수를 호출하면서 네 개의 파리미터 값을 넘겨 줌
직전 값(previous),현재 값(current), 인덱스 , 벼열 전체

처음 콜백 함수를 호출할 때:
--첫 번째 엘리먼트를 previous에 설정, 두번째 엘리먼트 값을 current에 설정
--인덱스에 1를 설정

두 번째 콜백 함수를 호출할 때:
콜백 함수에서 반환한 값을 previous에 설정, 세번째 얼레민터를 current에 설정

-두 번째 파리머트를 작성한 경우

콜백 함수를 호출하면서 네 개의 파리미터 값을 넘겨줌
직전 값(previous), 현재 값(current),인덱스 , 배열 전체

-처음 콜백 함수를 호출할 때 :
두 번째 파라미터 값을 previous에 설정하고
첫 번째 파리미터 값을 current에 설정
인덱스에 0을 설정

[reduceRight()]

-개요
배열 끝에서 앞으로 읽어가면서
콜백 함수를 호출하고 콜백 함수에서 반환한 값을 반환
이외의 처리 방법은 reduce()와 같음


[indexOf()]

-개요
파라미터 값과 일치하는 엘리먼트의 인덱스를 반환
왼쪽에서 오른쪽으로 검색
일치하는 엘리먼트가 있으면 더 이상 검색하지 않고 종료
일치하는 엘리먼트가 없으면 -1 반환
데이터 타입 까지 체크. 1 === "1"은 다름

두 번째 파리미터를 지정하면 지정한 인덱스부터 검색
지정하지 않으면 0으로 간주
음수 값을 지정하면 length 프로퍼티 값을 더해 인덱스로 사용
더한 값이 음수이면 0을 사용

String에 indexOf에 두번째 파라미터가 -이면 0부터 시작하지만
Array에 indexOf에 두 번째 파라미터가 -이면 length에서 빼고 계산해서 돌아간다.


[lastIndexOf()]

-개요
파라미터 값과 일치하는 엘리먼트의 인덱스를 반환
오른쪽에서 왼쪽으로 검색
다른것은  indexOf()와 같음
