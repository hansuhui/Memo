
[sort()]

-개요
배열의 얼리먼트 값을 정렬하여 반환

-정렬기준
정렬 기준은 엘리먼트의 값의 unicode
unicode 값이 작으면 앞에 오고 크면 뒤에 옴
data 위치에 지정한 배열도 정렬되어 순서가 바뀜
엘리먼트 값이 undefuned,null이면 끝으로 이동  null이 먼저이고  그 다음이 undefuned 
파라미터에 함수를 작성하면 함수를 호출하고 반환된 값으로 정렬

-역순 sort 제공하지 않음
파리미터 함수를 사용하여 역순 sort 가능


var value = [101,26,7,1234];
value.sort();
	
//sort 결과를 보면 사람이 생각하는 것과 다르다.
//[7,26,101,1234]가 사람이 생각하는 sort이다.
//유니코드를 기준으로 비교하기 때문에 순서가 다르다
js.log(value);
	
//이렇게 정렬된 이유는 자바스크립트가 숫자를 문자열로 변환하고
//앞에서 부터 하나씩 유니코드로 비교하여 sort하기 때문이다.
	
//즉 101과 23에서 1이 2보다 작ㅈ으므로 다음 값은 바교하지 않고
//101이 26보다 작다고 인식하기 떄문이다.
	
//두번째 파라미터에 함수를 작성하여
//사람이 인식하는 정렬방법으로 바꿔야 한다.


value = [101,26,7,1234];
	
	value.sort(function(one,two){
		return one-two;
	});

**sort 알고리즘 **

1.sort()에서 function(){}를 호출하면 101과 26을 파라미터 값으로 넘겨준다.

2.(101-26) 결과는 양수이며 0보다 큰 값을 반환한다.
-sort()는 0보다 큰 값이 반환되면 배열에서 값의 위치를 바꾼다.
-따라서 [26,101,7,1234]가 된다.

3.다시 함수를 호출하면서 101과 7을 넘겨 준다.
-(101-7)은 양수이며 0보다 큰 값을 반환한다.
-반환 값이 0보다 크므로 배열에서 값의 위치를 바꾼다.
-따라서 [26,7,101,1234]가 된다.

4.다시 함수를 호출하면서 101과 1234를 넘겨준다.
-(101-1234)는 음수이며 0보다 작은 값을 반환한다.
-sort() 0보다 작거나 같으면 배열에서 값의 위치를 바꾸지 않는다.
-따라서 [26,7,101,1234]가 된다.

5.이와 같은 방법으로 다시 처음으로 돌아가 바뀌는 것이 없을때까지
  배열의 엘리먼트 위치를 조정한다.


//역순 작렬
value = [101,26,7,1234];
	
	//역순으로 계산하기
	value.sort(function(one,two){
		return -(one-two);
	});
	
js.log(value);
