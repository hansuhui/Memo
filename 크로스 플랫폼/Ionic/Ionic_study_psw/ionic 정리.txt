아이오닉 경로에서 code . 을 입력하면 비주얼 스튜디오 코드가 실행 됨

src 가 www 폴더로 컴파일 됨.

www 폴더의 build 폴더의 amin.css는 src 폴더의 모든 css 파일이 들어가며
main.js 파일에는 src 폴더의 모든 ts파일들이 자바스크립트로 캄파일 되고 합쳐짐

scss를 추가하고자 한다면 src/pages 폴더아래 각 page 폴더에 추가하여 저장해주면 된다.


ts 파일에서 import를 하기 위해서는 import를 하는 ts 파일에서 export가 선언되어 있어야 한다.



* @Component Decorator
컴포넌트 + 데코레이터
tsconfig.json 에 사용가능하도록 설정되어 있다.

클래스 앞에 @Component를 해주면 그 클래스는 컴포넌트가 됨

컴포넌트란 앱을 구성하는 요소나 로직을 말하며 컴포넌트는 @Component Decorator로 장식된 클래스 이다.



* src > app > app.component.ts
Root 컴포넌트(앱 컴포넌트)라고 함, 처음실행되고 다른 모든 component에 포함된다.

@Component({
  templateUrl: 'app.html'
})
export class MyApp {
  rootPage:any = HomePage;

  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {
    platform.ready().then(() => {
      // Okay, so the platform is ready and our plugins are available.
      // Here you can do any higher level native things you might need.
      statusBar.styleDefault();
      splashScreen.hide();
    });
  }
}

위 소스에서 MyApp은 앞에 적힌 @Component가 있으므로 컴포넌트가 됨
HomePage를 rootPage로 인식을 하게 되며 앱 실행시 가장먼저 나타나는 페이지가 된다.



* home.ts = 시작페이지 = Root Page = 홈페이지
앱이 실행될 때 home.ts 파일의 constructor가 실행된다. 

@Component에 있는 template 에는 html 코드를 넣을 수 있고 templateUrl을 넣으면 html을 정의할 수 있다.



* 앱 모듈, app.module.ts