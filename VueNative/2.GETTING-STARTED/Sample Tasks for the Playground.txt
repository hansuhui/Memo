[Sample Tasks for the Playground]

NativeScript 놀이터를 탐색 하려면 다음 요구 사항을 충족하는 간단한 할 일 목록을 만들어야 합니다.

- 기본 디자인

  1. 2탭 레이아웃
  2. 하나의 탭에는 활성 작업이 표시되며 새 작업을 추가 할 수 있습니다.
  3. 두 번째 탭에는 완료된 작업이 나열됩니다.

- (예정) 기본기능

  1. 작업 추가 : 사용자는 텍스트로 작업을 추가 할 수 있습니다.
  2. 작업 보기
      - 새로 추가 된 작업은 활성 상태로 표시되며 탭 할 수 있습니다.
      - 완료된 작업은 별도의 탭에 나열됩니다.

  3. 작업 완료 : 활성 작업을 누르면 완료되고 다른 탭으로 이동합니다.
  4. 작업 삭제 : X 버튼을 누르면 활성 또는 완료된 작업이 제거됩니다.

- (예정) 고급 기능

  1. 일정 작업 : 사용자는 일정 위젯에서 날짜를 선택하여 작업의 마감 시간을 설정할 수 있습니다.
  2. 대량 작업 관리

팁 : 이 튜토리얼의 모든 섹션에는 NativeScript 기본 사항과 요구 사항 구현 하위 섹션이 포함되어 있습니다.
     기본 소단원을 건너 뛰고 구현에 직접 뛰어 가서 실용적인 접근 방법을 찾을 수 있습니다.


[벌거 벗은 Vue.js 템플릿]

이 튜토리얼에 대한 모든 개발 노력에서 발생 app.js 하고 app.css 각각 응용 프로그램의 기능을 포함하는
앱 스타일의 주의하면서.

app.js 새로 만든 Vue.js 프로젝트는 단순한 구성되어 template 어떤 기능이 없는 선언. 놀이터는 또한 사용자 
인터페이스 구성 요소를 드래그 앱 드롭 하여 앱에 추가하면 methods 블록을 추가하고 실제 앱 기능을 포함하는
코드를 채 웁니다.

app.js 에서, 당신은 작업 할 수 있습니다 template 사용자 인터페이스 또는 설계 블록 methods 응용 프로그램
기능을 이 template 블록에는 NativeScript 호환 XML이 필요합니다. 이 methods 블록은 Vue.js 및 
NativeScript JavaScript 코드를 모두 허용합니다.


[기본 디자인]

- 섹션 진행

다음은 이 섹션의 시작과 끝 부분에서 앱을 표시하는 방법입니다.

사이트 이미지 참조


- 일부 NativeScript 기본 사항

이 <Page> 요소는 모든 NativeScript + Vue.js 앱의 최상위 사용자 인터페이스 요소입니다. 
다른 모든 사용자 인터페이스 요소는 내부에 중첩되어 있습니다.

<ActionBar> 요소는 동작하는 바를 나타낸다. <Page>는 둘 이상의 <Page>를 포함할 수 없습니다 

일반적으로의 뒤에는 <ActionBar> 탐색기 구성 요소(예: 서랍식 또는 탭보기) 또는레이아웃 구성 요서가 있습니다.
이 요소는 앱 레이아웃을 제어하며 다른 사용자 인터페이스 요소를 내부에 배치하는 방법을 결정할 수 있게 합니다.


- 요구 사항 구현

사용 <TabView> 두 탭의 응용 프로그램을 작성하는 구성 요소를.

1. 기본 <ScrollVue> 블록과 템플릿과 함께 제공되는 모든 내용을 제거하십시요.
   <ScrollView> 구성 요소는 스크롤 가능한 내용의 최상휘 레이아웃 컨테이너 입니다.

2. <TabView> 구성 요소를 해당 위치로 끌어 놓습니다.
   놀이터는 코드 서식을 적용하지 않으며 새 구성 요소를 삽입 할 때 들여 쓰기를 처리하지 않습니다.

3. <TabView> 화면을 채울 높이를 구성하십시오 (100%로 설정).
   iOS 기기에서 기본 높이 설정을 사용하면 탭이 화면 중간에 표시됩니다.

4. <TabViewItem> 목적과 목적을 반하여 요소의 제목과 내용을 변경하십시오.
   이 시점에서 탭의 텍스트 내용은 <Label> 스타일 및 서식이 없는 구성 요소에 표시됩니다.
   <Label> 구성 요소에 속성을 적용하여 텍스트의 시각화를 향상시킵니다.


================================================================================


new Vue({
  template: `
     <Page class="page">
       <ActionBar title="My Tasks" class="action-bar" />
     
       <TabView height="100%">
         <TabViewItem title="To Do">
	   <Label text = "This tab will list active tasks and will let users add new tasks." textWrap="true" />
         </TabViewItem>
         <TabViewItem title="Complated">
	   <Label text = "This tab will list complated tasks for tracking" textWrap="true" />
         </TabViewItem>       
       </TabView>
     </Page>
  `
}).$start();
   



    