PL/SQL에서 가장 대표적인 구조인 스토어드 프로시져는 개발자가 자주 실행해야 하는 업무 흐름을 미리 작성하여 데이터베이스 내에 저장해 두었다가 필요할 때마다 호출하여 실행할 수 있다.







-- 프로시져 작성

CREATE [OR REPLACE] PROCEDURE 프로시져이름

[(

   매개변수 IN 자료형,           // 입력용, 인수에서는 자료형크기를 지정하면 안 된다.

   매개변수 OUT 자료형,        // 출력용

   매개변수 IN OUT 자료형	 // 입/출력용

)]

IS 

   [변수의 선언]

BEGIN

   .............

   [EXCEPTION]

   .............

END;




 IN 파라미터 : 호출자에 의해 프로시져로 전달되는 파라미터이며, '읽기' 전용의 값으로 프로시져는 이 파라미터의 값을 변경할 수 없다.(디폴트 모드)

 OUT 파라미터 : 프로시져에서 값을 변경할 수 있고, '쓰기' 기능으로 프로시져가 정보를 호출자에게 돌려주는 기능이다. OUT 파라미터는 디폴트값을 지정할 수 없다.

 IN OUT 파라미터 : 프로시져가 읽고 쓰는 작업을 동시에 할 수 있는 파라미터이다.







  -- 주의

    1) 프로시져 안에서는 INSERT, UPDATE, DELETE문을 사용하는 경우 자동 커밋이 되지 않으므로 COMMIT; 구문을 추가 해야 한다.

    2) 프로시져에서 INSERT 문을 2개 이상 사용하여 데이터를 추가하는 경우 첫번째 INSERT문은 성공하고 두번째 INSERT 에서 추가를 실패하면 첫번째 INSERT는 자동으로 ROLLBACK 된다.







-- 테이블의 프로시져, 함수, 패키지 등 상호 참조되는 관계 확인

 SELECT * FROM user_dependencies;




-- 소스확인

SELECT text FROM user_source;







-- 프로시져 목록 확인

SELECT object_name FROM user_procedures;







-- 프로시져 실행

EXEC[UTE] 프로시져이름[(인수, 인수)];







-- 프로시져 삭제

DROP PROCEDURE 프로시져이름;




 * 테이블이 삭제된다고 연관된 프로시져가 삭제 되는것은 아니다.

   하지만 테이블이 삭제된 상태에서 연관된 프로시져를 실행 하면 오류가 발생 한다.
