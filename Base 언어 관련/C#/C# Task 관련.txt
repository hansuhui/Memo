private static void work(int n, int wait){
   Task.delay(1000 * wait).Wait();
   Console.WriteLine("Task {0} done",n);
}


static void Main(string [] args){
  var t1 = Task.Run(() => { work(1,2); });
  var t2 = Task.Run(() => { work(2,3); });
  var t3 = Task.Run(() => { work(3,5); });
  var t4 = Task.Run(() => { work(4,1); });
  Task.WaitAll(t1,t2,t3,t4);
  Console.WriteLine("All Done");
}


-----------------------------------------------------------------

static void Main(string [] args){
  Parallel.Invoke(
    () => { work(1,2); },
    () => { work(2,3); },
    () => { work(3,5); },
    () => { work(4,1); }
);
  Console.WriteLine("All Done");
}



-----------------------------------------------------------------

static void Main(string [] args){
  string[] ar = {"one","two","three"};
  ar.AsParallel().ForAll(c => {
    Console.WriteLine(c);
  });
}

