http://mrw0119.tistory.com/20

[무명 형식(Anonymous Type)]

변수 형식(타입)에는 잘 알다시피 int, float , double, string, class  등등이 있으며,
우리는 이 형식이름으로 변수를 선언해서 사용한다.

그런데 무명형식(Anonmous Type)이라 하는데,
무명형식은 임시 변수가 필요할 때 아주 유용한다.
(임시 변수 : 임시로 생성해서 사용후, 재사용되지 않는 변수)

선언하는 방법은 다음과 같다.

var temp =  new {Age = 11 , Name = "십일"};

무명형식은 반드시 선언과 함께 new 키워드로 인스턴스를 생성해주어야 하며,
생성된 인스턴스는 읽기 전용이기 떄문에 값 변경이 불가능하다.

그럼 간단한 예제를 작성해 보자.


- 예제 -

var temp =  new {Age = 11 , Name = "십일"};

vaf tempArr = new 
{
  Int = new int[] {11,22,33},
  Float = new float[] {0.1f,0.2f,0.3f}
};

foreach (var el in tempArr.Int){}
foreach (var el in tempArr.Float){}

================================================================================

[무명 메소드(Anonymous Method)]

모든 메소드는 이름을 가진다.
메소드가 메개변수나 반환값은 없을 수 있지만 이름이 없을 수는 없다.

당연한 말이지만 이름은 있어야 그 메소드를 호출할 수 있기 때문이다.
하지만 C#은 이름이 ㅇ벗는 무명 메소드를 제공한다.

무명 메소드는 이름이 없기 때문에 메소드를 호출하기 위해서는 델리게이트 변수가 필요하다.
즉, 델리게이트 변수를 선언하고, 그 변수로 무명 메소드를 참조하게 되는것이다.
(델리게이트와 무명 메소드는 당연히 같은 형식이어야 한다.)

//델리게이트 타입 선언
delegate int MyDelegate(int a, int b);

public statie void main()
{ 
   //델리게이트 변수 선언
   MyDelegate add;

   //무명 메소드 참조
   add = delegate(int a, int b) { return a+b;};
   Console.WriteLine(add(11,22)); 
}

델리게이트로 무명메소드를 참조하면 이제 함수내에서 얼마든지 호출해서 쓸 수 있다.
무명 메소드는 위와 같이 간단한 연산의 메소드를 임시적으로 써야 할 때나
델리게이트를 다른 함수에 넘겨주어 콜백으로 사용할 때에도 아주 유용하다.

