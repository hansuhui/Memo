http://www.csharpstudy.com/Practical/Prac-excel.aspx


C# : Excel 프로그래밍 

C#을 이용해 Excel 파일에 데이타를 읽거나 쓸 때, Excel Automation을 이용하거나 OLEDB를 이용할 수 있다.

(1) C#에서 엑셀 오토메이션을 이용하기 위해서는 Excel Interop 을 참조한 후, 
    Office Automation COM API들을 사용하게 된다. 
(2) C#에서 엑셀을 OLEDB를 이용할 경우에는 ADO.NET의 OleDb 클래스들을 사용하여 엑셀 데이타를 핸들링하게 된다. 




C#에서 Excel Automation 사용 

엑셀 오토메이션은 COM API들이고, C# 에서 이를 엑세스하기 위해서는 
먼저 Excel COM Interop DLL을 참조해야 한다. (주: Excel COM Dll 참조는 버젼에 따라 다른데, 
Add Reference - Assembly - Extensions에서 Microsoft.Office.Interop.Excel.dll을 참조하거나 
Add Reference - COM -Type Libraries 에서 Microsoft Excecl Object Library를 선택하여 참조한다.)

DLL이 참조된 후에 using Microsoft.Office.Interop.Excel; 
와 같이 Excel 네임스페이스를 참조하여 사용하게 된다.

프로그램 코드에서는 기본적으로 Excel의 구조대로 먼저 Excel Application 객체를 얻고, 
Workbook 객체 그리고 Worksheet 객체를 차례로 얻은 후, 이 Worksheet의 Cell 혹은 
Range를 지정하여 데이타를 핸들링한다.

마지막으로 사용 후에는 Excel 객체들을 Release해 주어야 백그라운드에 Excel.exe가 남지 않는다. 


Excel 파일을 OleDbConnection을 사용해 연결을 한 후에, 
다른 데이타 소스들과 같이 ADO.NET의 OleDb* 클래스들을 이용해 
데이타를 가져오거나 삽입, 삭제, 갱신등을 하게 된다. 아래 예제는 
엑셀 파일로부터 데이타를 읽고, 수정 및 추가를 하는 예이다. 


private void ExcelTest()
{
   // OLEDB를 이용한 엑셀 연결
   string szConn = @"Provider=Microsoft.Jet.OLEDB.4.0;Data Source=C:\x\test.xls;Extended Properties='Excel 8.0;HDR=No'";
   OleDbConnection conn = new OleDbConnection(szConn);
   conn.Open();

   // 엑셀로부터 데이타 읽기
   OleDbCommand cmd = new OleDbCommand("SELECT * FROM [Sheet1$]", conn);
   OleDbDataAdapter adpt = new OleDbDataAdapter(cmd);
   DataSet ds = new DataSet();
   adpt.Fill(ds);

   foreach (DataRow dr in ds.Tables[0].Rows)
   {
      string data = string.Format("F1:{0}, F2:{1}, F3:{2}", dr[0], dr[1], dr[2]);
      MessageBox.Show(data);
   }
         
   // 엑셀 데이타 갱신
   cmd = new OleDbCommand("UPDATE [Sheet1$] SET F2='Hello' WHERE F1='a'", conn); 
   cmd.ExecuteNonQuery();
   cmd = new OleDbCommand("UPDATE [Sheet1$A2:C2] SET F2='World'", conn);
   cmd.ExecuteNonQuery();

   // 데이타 추가
   cmd = new OleDbCommand("INSERT INTO [Sheet1$](F1,F2,F3) VALUES ('A3','B3','C3')", conn);
   cmd.ExecuteNonQuery();

   conn.Close();
}
