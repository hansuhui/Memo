
이 경우 에서는 열거형 내에 하루의 각 주기를 표현하기 위한 정수값을 사용하였다. 이 각 값을
열거형의 멤버처럼 제어할 수 있다. 예를 들면 TimeOfDay.Morning은 0을 나타낸다. 전형적으로
열거형은 적절한 값을 메소드에 넘겨주기 위해서 사용되거나 switch문의 분기 조건에 사용된다.

[열거형(enumeration)]

열거형은 사용자가 정의한 정수 형식이다. 열거형을 선언핼 때 열거형의 인스턴스가 포함할 수 
있는 어떤 특정한 값들의 집합을 정의해야 한다. 그것뿐만 아니라 사용자에게 익숙한 이름으로
값을 대신할 수 있다. 만약 코드에서 열거형의 인스턴스가 받아들을 수 없는 값을 할당하려고 
시도하면 컴파일러는 오류를 발생시킨다.

프로그래밍을 하다보면 열거형이 매우 유용하게 쓰이는 상황이 가끔씩 있다. 예를 들면 클래스를
디자인할 때 클래스의 프로퍼티가 몇 개의 이미 결정된 값들 중의 하나로 결정될 수 있는 상황이 있다.
혹은 setWindowLong과 같이 입력 매개변수 중 하나의 특정한 값에 따라서 다르게 동작하는 함수를
만들 때가 있다.

평이한 정수 형식이 아닌 열거형을 사용하면 아래와 같은 장점을 얻게 된다.

-미리 이야기했듯이 열거형을 사용하면 변수가 적절한 값으로 할당되었는지 쉽게 확인할 수 있어
코드를 유지 보수하기가 쉬워진다.

-열거형은 어떤 의미를 가지고 있는지 판독하기 힘든 숫자와는 달리 서술적인 이름을 사용하므로써
코드를 좀 더 명확하게 만들어 준다.

-열거형을 사용하면 또한 코드를 입력하기 쉽다. 만약 어떤 값을 열거형의 인스턴스에
대입하려고 할 때 VS.NET 통합 개발 환경은 인텔리센스 기능을 통하여 열거형의 인스턴스가
받아들일 수 있는 값들을 리스트 박스로 표시하여 키보드를 치는 횟수를 줄여준다.

프로그래밍에서 열거형을 사용하는 것은 많은 시간과 수고를 덜어주는 작은 방법 중의 하나이다.
열거형을 적절히 사용하는 것은 전문적인 개발자임을 나타내는 지표로 받아들여지곤 한다.

열거형을 다음과 같이 정의할 수 있다.


public enum TimeOfDay{
 Morning = 0,
 Afternoon = 1,
 Evening = 2
}
