1.스택(stack)

-여기는 int형식 같이 고정된 크기를 갖는 데이터를 저장하는데 사용된다.
-모든 프로그램은 다른 프로그램이 침범 할수 없는 독자적인 스택을 가지고 있다.
- 메소드가 호출될 때 그 메소드 내에 모든 지역 변수는 스택에 보관되어 사용한다.
-무한 재귀적 호출을 수행하는 프로그램을 작성하여 실행시키다가 
"스택공간이 모자랍니다."라는 오류는 너무 많은 변수들을 스택에 쌓아놓아서
스택 공간이 부족했기 때문이다.


2.힙 (heap)

-C나 C++ 같은 예전의 언어에서는 힙을 문자열 같이 동적인 크기를
 가진 데이터를 저장하는데 사용하거나 , 그 데이터가 처음 정의된 메소드의 범위를
 넘어서도 계속 유효한 데이터를 저장하고 있도록 하기 위해서 사용하였다.

-메소드가 시스템의 힙에 객체를 생성하면, 메소드 호출이 끝나더라도 시스템은
 그 객체를 제거하지 않는다. C#에서는 이러한 경우에 관리힙(managed heap)이라고
 하여 기존의 힙과는 약간 다른 성격을 가진 공간에 저장한다.
- 관리힙은 목적상으로는 기존의 힙과 비슷하지만 내부적으로 좀더 효율적으로
  작동한다. 
- 예전에 언어에서는 개발자가 주어진 개체에 대해서 힙을 사용할 것을 명시해줄수
  있었지만, C#에서는 컴파일러가 객체의 데이터 형식에 따라 모든 것을 결정 한다.



------------------------------------------------------------------------------------------------

C#은 데이터가 저장되는 장소에 따라 데이터 형식을 두 가지 범조로 나눈다.

1. 값 형식 (Value Type)
-  값 형식 변수는 데이터를 스택에 저장한다.

2. 참조 형식 (Refernce type)
- 참조 형식 변수는 데이터를 힙에 저장한다.


------------------------------------------------------------------------------------------------

데이터 형식이 저장되는 장소는 그 데이터 형식을 가진 변수가 할당되는 방식을 내포하고 있다.

하나의 값 형식 변수를 다른 값 형식 변수에 대입하는 것은
스택내에 데이터의 복사본을 만드는 것을 의미한다.

(만약 부울 변수를 하나 선언하고 거기에 다른 부울 변수의 값을 대입하면 
두개의 독립적인 부울 변수를 메모리에 생성하게 된다.
나중에 첫번째 부울 변수의 값을 변화시키더라도 두번째 부울 변수의 값은 바뀌지 않는다
)

참조형식 변수를 다른 참조 형식 변수에 대입하는것은
메모리의 동일한 위치를 두 변수가 가리키게 되는것을 의미한다.

(
클래스를 포함하여 C#의 복잡한 데이터 형식은 대부분 참조 형식이다.
참조 형식의 변수는 힙에 할당되고 , 코드의 여러 군데에서 오랫동안 유효한 값을 지니게 되고
하나 혹은 다수의 참조 형식 변수에 의해서 엑세스 가능하다.
)


CRL은 어떤 참조 형식의 변수가 참조하던 개체가 더 이상 엑세스 가능하지 않으면
그 객체의 할당된 메모리를 해지시켜 준다, 
CRL의 이러한 기능을 가리켜 '가비지 컬렉션(garbage collection)'이라 부른다.


bool이나 long 같은 값 형식이 다수의 메소드를 제공한다는 점에서 클래스와 같이
생각될 수도 있지만 사실 그것들은 구조체이다. C#에서 구조체 형식도 값 형식인 것이다.
구조체 형식은 스택에 만들어지고 대입 구문에서 복사를 수행한다는 차원에서 엄연히 값 형식이다.





































