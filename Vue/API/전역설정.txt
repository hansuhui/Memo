[전역 설정]

# silent

- 타입 : boolean

- 기본값 : false

- 사용 방법

Vue.config.silent = ture

모든 Vue의 로그와 경고를 출력하지 않았습니다.


# optionMergeStrategies


- 타입 { [key: string]: Function }

- 기본값 : {}

- 사용방법

Vue.config.optionMergeStrategies._my_option = function (parent,child , vm){
   return child + 1
}


const Profile = Vue.extend({
   _my_option
})

// Profile.options._my_option = 2


사용자 정의 병합 전략을 설정할 수 있습니다.

병합 전력은 부모 및 자식 인스턴스에 정의된 해당 옵션의 값을 첫번째와 두번째 인자로 
전달 받습니다. 컨텍스트 Vue 객체는 세번쨰 인자로 전달 받습니다.


# devtools 

- 타입 : bollean

- 기본값 : true (false in production builds)

- 사용방법 :

// Vue를 불러온 후 동기적으로 설정됩니다
Vue.config.devtools = true

vue-devtools를 사용할 수 있게 합니다. 개발용 빌드시 true, 배포용 빌드는 false 가
기본 값입니다. true로 설정하면 통해 배포용 빌드에서 사용할 수 있습니다.



# errorHandler

- 타입 : Function

- 기본값 : undefined

- 사용 방법:

Vue.config.errorHandler = function (err, vm,info) {
   // 에러 핸들링
   // 'type'은 Vue의 에러 타입입니다. 예 : 라이프사이클 훅
   // 2.2.0+ 이상에서 사용할 수 있습니다.
}

컴포넌트 렌더 함수 및 감시자 중에 잡히지 않은 오류에 대한 핸들러를 할당합니다.
핸들러는 오류 및 Vue 인스턴스와 함께 호출됩니다.

2.2.0 에서 이 훅은 컴포넌트 라이프사이클 훅의 오류를 캡처합니다.
또한, 이 훅이 undefined 일 때, 캡쳐 된 에러는 어플리케이션을 실행 불능으로 만드는 대신에
console.log.error 로그를 출력합니다.


2.4.0에서 이 훅은 Vue의 사용자 정의 이벤트 핸들러가 발생하는 에러를 감지합니다.
오류 추적 서비스인 Sentry와 Bugsnag은 공식적으로 Vue를 지원합니다.


# warnHandler

2.4.0 이후 추가됨

- 타입 : Function

- 기본값 : undefined

- 사용방법 : 

Vue.config.warnHandler = function (msg, vm, trace) {
   // trace는 컴포넌트 계층 구조를 추적합니다.
}


런타임 Vue 경고에 대한 사용자 정의 핸들러를 할당하십시오. 이는 개발 중에만 작동하며
배포시 무시됩니다.


# ignoreElements

- 타입 : Array<string | RegExp>

- 기본값 : []

- 사용방법 :

Vue.config.ignoredElements = [
   'my-custom-web-component' ,
   'another-web-component' ,
   // 'RegExp'를 이용해 'ion-' 으로 시작하는 모든 엘리먼트를 무시함
   // 2.5+ only
   /^ion-/
]


Vue가 외부에서 정의된 사용자 정의 엘리먼트(예를 들어, Web Components API)를 무시하도록 합니다.
전역 컴포넌트를 등록하지 않았거나, 알수 없는 사용자 정의 엘리먼트에 대한 경고를 표시합니다.


# keyCodes

- 타입 : { [key: string]: number | Array<number> }

- 기본값 : {}

- 사용방법 :

Vue.config.keyCodes = {
   v: 86,
   f1: 112,
   // camelCase는 작동하지 않습니다.
   mediaPlayPauseL 179,
   // 쌍따옴표로 감싸진 kebab-case를 사용하세요
   "media-play-pause" : 179,
   up: [38, 87]
}

<input type="text" @keyup,media-play-pause="method">

v-on에 사용자 정의 키를 할당합니다.


# performance

2.2.0에서 추가됨

- 타입 : boolean

- 기본값 : false (from 2.2.3)

- 사용방법 :

true로 설정하면 브라우저 devtool의 타임라인에서 컴포넌트 초기화, 컼파일 , 렌더링 및
패치 성능 추적을 활성할 수 있습니다. 개발 모드 및 performance.mark API를 지원하는 
브라우저에서만 작동합니다.


# productionTip

2.2.0에서 추가됨

- 타입 : boolean

- 기본값 : ture

- 사용방법 :

false 로 설정하면 배포에 대한 팁을 출력하지 않습니다.
