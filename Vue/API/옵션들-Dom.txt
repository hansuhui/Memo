[옵션들/DOM]

# el 

- 타입: string | HTMLElment

- 제한: new를 이용한 인스턴스 생성떄만 사용됩니다.

- 상세: 

  Vue 인스턴스에 마운트 할 기존 DOM 엘리먼트 필요합니다.
  CSS 선택자 문자열 또는 실제 HTMLElement 이어야 합니다.

  인스턴스가 마운트 된 이후, 그 엘리면트는 vm.$el로 엑세스 할 수 있습니다.

  인스턴스화 할 떄 옵션을 사용할 수 있는 경우 인스턴스는 즉시 컴파일을 시작합니다.
  그렇지 않으면 컴파일을 수동으로 하기 위해 vm.$mount()를 명시적으로 호출해야합니다.

! 제공된 엘리면트는 설치 지점으로 사용합니다. Vue 1.x와 달리 마운트 된 엘리먼트는
  모든 경우에 Vue가 생성한 DOM으로 대체됩니다. 그러므로 루트 인스턴스를 
  <html> 또는 <body>에 마운트 하는 것을 권장하지 않습니다.

! render 함수 또는 template 옵션 둘 다 없으면, 마운트할 DOM 요소의 내부 DOM이
  템플릿으로 추출 될 것입니다. 이 경우, Vue의 런타임 + 컴파일러 빌드를 사용해야합니다.


- 참고:
  라이프사이클 다이어그램
  Runtime + Compiler vs. Runtime-only


# template

- 타입: string

- 상세:

  Vue 인스턴스의 마크업으로 사용할 문자열 템플릿 입니다. 템플릿은 마운트 된 엘리먼트를
  대체 합니다. 템플릿에 컨텐츠 배포 슬롯이 없는 경우 마운트된 엘리먼트의 기존 마크업은
  무시됩니다.

  문자열이 #으로 시작하면 querySeector로 사용되며 선택된 에리면트의 innerHTML을
  템플릿 문자열로 사용합니다. 이렇게 하면 일반적인 <script type="x-template"> 
  트릭을 사용하여 템플릿을 포함할 수 있습니다.

! 보안 관점에서 신뢰할 수 있는 Vue 템플릿만 사용해야 합니다.
  사용자 콘텐츠를 템플릿으로 사용하면 안됩니다.

! Vue 옵션에 렌더 함수가 있으면 템플릿 속서은 무시됩니다.

- 참고:

  라이프사이클 다이어그램
  Slot을 이용한 컨텐츠 배포


# render

- 타입: (createElenent: () => VNode) => VNode

- 상세:

  문자열 템플릿 대신 자바스크립트의 완전한 프로그래밍 기능을 활용할 수 있습니다.
  render 함수는 VNode를 생성하는데 사용되는 첫번째 인자인 createElement 메소드를 받습니다.

  함수형 컴포넌트의 경우 렌더링 함수는 컴포넌트에 인스턴스가 없기 떄문에
  컨텍스트에 대한 엑세스를 제공하는 추가적인 context를 전달합니다.

! render 함수는 template 옵션 또는 el 옵션으로 지정된 마운트된 엘리먼트의
  템플릿에서 컴파일된 렌더링 함수보다 높은 우선 순위를 가집니다.


- 참고 : 렌더 함수

# renderError 

2.2.0에서 추가됨

- 타입 : (createElement: () => VNode, errorL Error) => VNode

- 상세:

  개발 모드에서만 작동합니다

  기본 render 함수가 에러를 만나면, 대체되는 렌더 결과를 제공합니다.
  오류는 두 번째 전달인자로 renderError 입니다. 핫 리로드와 함께 사용될 때 특히 유용합니다.

- 예제:

new Vue({
  render (h) {
    throw new Error('oops')
  },
  renderError (h, err) {
    return h('pre', {style: { color: 'red'}}. err.stack)
  }
}).$mount('#app')

- 참고 : Render Functions


