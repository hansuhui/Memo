[특별한 속성들]

# key

- 예상됨: string

  key 특수 속성은 Vue의 가상 DOM 알고리즘이 새로운 노드 목록을 
  이전 목록과 비교할 때 VNode를 식별하기 위한 힌트로 주로 사용됩니다. 
  키가 없으면 Vue는 엘리먼트 이동을 최소화하고 같은 유형의 
  엘리먼트를 최대한 많이 패치 / 재사용하려고 하는 알고리즘을 사용합니다. 
  키를 사용하면 키의 순서 변경을 기반으로 엘리먼트가 재정렬되고 더 이상 존재하지 않는 
  키가 있는 엘리먼트는 항상 제거 / 삭제 됩니다.

  동일한 부모의 자식 엘리먼트는 고유 키 가 있어야 합니다. 
  키가 중복되면 렌더링 오류가 발생합니다.

  가장 일반적인 이용 사례는 v-for와 결합합니다.

  <ul>
    <li v-for="item in items" :key="item.id">...</li>
  </ul>

  엘리먼트 / 컴포넌트를 재사용하지 않고 강제로 대체하는데에도 사용할 수 있습니다. 
  이것은 다음과 같은 경우 유용할 수 있습니다.

  컴포넌트의 라이프사이클 훅을 올바르게 트리거합니다.
  트랜지션효과 호출


- 예제:

  <transition>
    <span :key="text">{{ text }}</span>
  </transition>
  
text가 변경되면 <span>는 패치가 아닌 교체되므로 트랜지션이 트리거됩니다.


# ref

- 예상됨: string

  ref 엘리먼트 또는 자식 컴포넌트에 대한 참조를 등록하는데 사용합니다. 
  참조는 부모 컴포넌트의 $refs 객체 아래에 등록됩니다. 
  일반 DOM 엘리먼트에서 사용되는 경우 참조는 해당 엘리먼트입니다. 
  하위 컴포넌트에서 사용되는 경우 참조는 컴포넌트 인스턴스 입니다.

  <!-- vm.$refs.p는 DOM 노드가 됩니다 -->
  <p ref="p">hello</p>

  <!-- vm.$refs.child는 자식 컴포넌트 인스턴스가 됩니다. -->
  <child-comp ref="child"></child-comp>

  v-for를 사용하여 엘리먼트 / 컴포넌트에 사용되는 경우 등록된 참조는 
  DOM 노드 또는 컴포넌트 인스턴스가 포함된 배열입니다.

  참조 등록 타이밍에 대한 중요한 참고 사항: 
  참조 자체는 렌더링 함수의 결과로 생성되기 때문에 초기 렌더링에서 참조 자체를 
  액세스 할 수 없습니다. 아직 존재하지 않습니다! 
  $refs는 또한 반응이 없으므로 데이터 바인딩을 위해 템플릿에서 사용해서는 안됩니다.


- 참고: 자식 컴포넌트 참조


#slot

- 예상됨: string

  컨텐츠가 있는 슬롯의 이름을 위해 자식 컴포넌트에 삽입된 컨텐츠에 사용됩니다.
  자세한 사용법은 아래 링크 된 가이드 섹션을 참조하십시오.

- 참고: 명명된 슬롯
  

# slot-scope
  2.5.0+ 이후 추가

- 예상됨: 함수 전달인자 표현식

- 사용법:

  엘리먼트 또는 컴포넌트가 지정된 슬롯으로 표시하는데 사용됩니다. 
  속성 값은 함수 서명의 전달인자 위치에 나타날 수 있는 
  유효한 JavaScript 표현식이어야합니다. 
  
  즉, 지원되는 환경에서 ES2015 디스트럭처링을 사용할 수 있습니다. 
  2.5.0 이후에는 scope의 대안으로 사용합니다.

  이 속성은 동적 바인딩을 지원하지 않습니다.


- 함께 보기: 범위를 가지는 슬롯

# is

- 예상됨: string

  동적 컴포넌트 및 DOM 내부 템플릿의 한계를 해결하는데 사용합니다.

- 예제:

  <!-- currentView가 변경되면 컴포넌트가 변경됩니다. -->
  <component v-bind:is="currentView"></component>

  <!-- <my-row>는 <table> 엘리먼트에서 사용할 수 없으므로  -->
  <!-- 아래처럼 사용해야합니다     -->
  <table>
    <tr is="my-row"></tr>
  </table>
  


- 참고:

  동적 컴포넌트
  DOM 템플릿 파싱 주의사항

