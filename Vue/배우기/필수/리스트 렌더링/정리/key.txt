- key -

Vue가 v-for에서 렌더링된 엘리먼트 목록을 갱신할 때 기본적으로 "in-place patch" 전략을 사용합니다.
데이터 항목의 순서가 변경된 경우 항목의 순서와 일치하도록 DOM 요소를 이동하는 대신 Vue는
각 요소를 적절한 위치에 패치하고 해당 인덱스에서 렌더링할 내용을 반영하는지 확인합니다.
이것은 Vue 1.x의 track-by=$index 의 동작과 유사합니다.

이 기본 모드는 효율적이지만 목록의 출력 결과가 하위 컴포넌트 상태 또는 임시 
DOM상태(예 폼 input)에 의존하지 않는 경우 적합합니다.

Vue가 각 노드의 ID를 추적하고 기존 엘리먼트를 재사용하고 재정렬할 수 있도록 힌트를 제공하려면
각 항목의 고유한 key 속성을 제공해야 합니다. key에 대한 이상적인 값은 각 항목의 고유한 ID 입니다.
이 특별한 속성은 1.x 버전의 track-by와 거의 비슷하지만 속성처럼 작동하기 떄문에 v-bind 를 사용하여 
동적 값에 바인딩 해야합니다.(여기 서는 약어를 사용합니다.)

<div v-for="item in items" :key="item.id"> </div>

반복되는 DOM 내용이 단순하지 않거나 의도적인 성능 향상을 위해 기본 동작에 의존하지 않는한
가능하면 언제나 v-for 에 key를 추가하는 것이 좋습니다.

key는 Vue 가 노드를 식별하는 일반적인 메커니즘이기 떄문에 v-for 에 특별히 연관되지
않는 다른 용도로 사용합니다.