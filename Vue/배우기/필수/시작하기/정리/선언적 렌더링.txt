- 선언적 렌더링 -

Vue.js의 핵심은 간단한 템플릿 구문을 사용해 선언적으로 DOM에 데이터를 
렌더링하는 것입니다.

<div id="app">
 {{ message }}
</div>

var app = new Vue({
  el : '#app' ,
  data : {
      message : '안녕하세요 Vue!'
  }
})


우리는 이미 첫 Vue 앱을 만들었습니다. 문자열 템플릿을 렌더링하는 것과 매우 유사하지만 사실
vue는 더 많은 작업을 합니다. 데이터와 DOM이 연결되어 이제 모든 것이 반응형 입니다.
어떻게 알 수 있을까요? 브라우저의 JavaScript 콘솔을 열고 app.message를 다른 값으로 설정해 보십시오.
그에 따라 렌더링 된 예제를 볼 수 있습니다.

텍스트 보간 이외에도 다음과 같은 엘리먼트 속성을 바인딩할 수 있습니다.

<div id="app-2">
   <span v-bind:titl="message">
      mouse Event
   </span>
</div>


var app2 = new Vue({
   el: "#app-2",
   data : {message : "이 페이지는 "+ new Date()+"에 로드 되었습니다."}
})

여기서 우리는 새로운 곳에 다다랐습니다. v-bind 속성은 디렉티브 이라고 합니다. 
디렉티브는 Vue에서 제공하는 특수 속성임을 나타내는 v- 접두어가 붙어있으며 사용자가
짐작할 수 있듯 렌더링 된 DOM에 특수한 반응형 동작을 합니다. 기본적으로 
"이 요소의 title 속성을 Vue 인스턴스의 message 속성으로 최신 상태를 유지합니다."

JavaScript 콘솔을 다시 열고 app.message = '새로운 메시지' 라고 입력하면 
HTML(이 경우에 title 속성)이 업데이트되었음을 다시 한번 확인할 수 있습니다.

