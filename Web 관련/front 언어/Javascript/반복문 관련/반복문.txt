[while]

while문은 (표현식)을 평가한 불린 변환 값이 false가 될 떄까지 문장을 반복하여 실행합니다.
불린 변환 값이 true일 때 문장을 수행합니다.

형태 while(표현식) {문장}

표현식을 평가하고 결과를 불린 값으로 변환합니다. 불린 변환 값이 ture이면 문장을 실행하고
false이면 실행하지 않습니다. 불린 변환 값이 계속 true이면 무한대로 반복하게 되므로 false가
되도록 해야 합니다

var k =0;

while(k < 3){
  k= k+1;
}


[do-while]

do-while 문은 먼저 do 문장을 수행한 후 (표현식)을 평가합니다. 평가한 불린 변환 값이
true이면 false가 될 떄까지 do 문장을 반복하여 실행합니다, 평가한 불린 변환 값이 false
이면 while 안의 문장을 수행합니다.

형태 do {문장} while (표현식);

var k = 0;

do{
  k= k+1;
alert('do');
}while(k<3)
=== 따로
{
alert('while');
}

while 블럭엔 걸리지 않고 do 블럭에만 걸린다.
그리고 결과가 false가 되면 while를 창을 띄운다

[for]

for문은 표현식 평가 결과가 true인 동안 문장을 반복 실행합니다.

for(var 사용 옵션;표현식 옵션;증감 옵션){문장}
for(초깃값 옵션;표현식 옵션;증감 옵션){문장}


for문 예제

for(var k=0,value=0;k<3;k++){
 value += 20;
}


-세 번째의 증감 표현식 생략

for(var k = 0; k < 3 ){
문장
k= k+1;
}


-첫번째, 세번째 표현식 생력

var k =0;

for(;k<3;){
 k=k+1;
}


-두번째 , 세번째 표현식 생략

for(var k=0; ; ){

	k += 1;
	if(k > 2){
	   break;
	}
    }




-모두 생략
var k = 0;

    for(;;){
	if(k === 2){ break;}
	 k+= 1;
     }



-문장을 사용하지 않음

for(var k = 0; k <2 ; alert(k),k++);



-세미콜론 자동 삽입

for(var k =1 ; k<3 ; alert(k),k++)
alert('for 문장:'+k)
alert('다른문장'+k);


결과
for 문장 1
1
for 문장  2
2
다른문장 3



[for-in]

for-in 문은 오브젝트(Object)를 열거하면서 문장을 실행합니다.
열거란 오브젝트 형태의 반복을 의미합니다.

형태
for(var 변수 in 오브젝트){문장;}
for(표현식 in 오브젝트){문장;}

오브젝트란 {name:value} 형태를 의미합니다. ES5 스펙에서 for-in 형태로 표기하고
있으므로 이 책에서도 for-in으로 표기합니다. for-in 문으로 
반복하는 것을 for-in 루프(Loop)라고 부릅니다.

var sports = {soccer:11 , basketball : 5};

for(var pty in sports){
 alert('name :' +pty+ ' value: ' sports[pty]);
}

결과
name : soccer , value : 11
name : basketball , value : 5



sports 오브젝트의 프로퍼티 이름과 값을 조합하여 출력을 하였습니다.
오브젝트 프로퍼티의 출력 과장을 단계별로 살펴봅니다.

1.처음 한번만 변수(pty)를 선언합니다.
{코드}for(var pty in sports)
{설명}한 번만 선언하므로 for-in문 안에서 변수를 선언할 수 있습니다.

2.for-in 문의 sports를 평가하고 값을 구합니다.
{코드} for(var pty in sports)
{설명}평가 목적은 구한 값의 오브젝트 여부를 체크하기 위해서입니다.

3.구한 값이 null또는 undefined이면 for-in문 처리를 종료합니다.

4.구한 값을 오브젝트로 변환합니다.
{설명} 
var sports = 12와 같이 오브젝트가 아닌 숫자를 할당한 후 for(var pty in sports){}문을
수행하더라도 에러가 발생하지 않습니다. 왜냐하면 for-in 문을 반복하기 전에 sports 값인 12를
number 오브젝트로 변환하지 않는다면 12가 오브젝트가 아니므로 에러가 발생합니다.

5.변환한 오브젝트를 열거합니다.
{설명}처음 열거하면 "soccer:11"이 읽혀지고 두 번째로 "basketball:5"가 읽혀집니다.

6.프로퍼티 이름을 pty 변수에 설정합니다.
{설명} soccer , basketball이 pty 변수에 설정됩니다.
var sports = {}와 같이 빈 오브젝트를 할당하면 에러가 발생하지 않지만 , 오브젝트에
프로퍼티가 없으므로 실행하지 않습니다. sports 오브젝트의 프로퍼티가 열거 불가이면 
처리하지 않습니다.

7.블럭안에 문장을 수행합니다.

8.break 문이 있으면 for-in루프를 종료합니다.

9.contunue 문이 있으면 continue문 아래를 수행하지 않고 5번으로 이동하비낟.

10.5번부터 9번까지 반복하여 수행합니다.


-for-in 루프 고려 사항
오브젝트의 프로퍼티가 이름으로 분류(Sort)되어 열거되지 않습니다.
-오브젝트에 작성한 순서로 열거된다고 보장하지 않습니다. 다만 열거할 뿐입니다.
반드시 작성된 순서를 원한다면 순서를 가진 배열(Array)을 사용해야 합니다.