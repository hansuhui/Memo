https://www.cmsfactory.net/node/11419


[전체 선택자] 

전체 선택자(Universal Selector)는 모든 HTML 요소를 선택합니다.
별표(*)로 나타냅니다 예를 들어


*{ color: blue;}

는 모든 요소의 색을 파란색으로 만듭니다. 
다른 선택자와 같이 사용할 때는 생략 할 수 있습니다. 즉,
*.abc {color : blud;}
.abc {color : blud;}

는 같은 결과를 만듭니다.

- 예제 -
모든 요소의 글자 모양을 기울임꼴로 만드는 예제입니다.


<!doctype html>
<html lang="ko">
  <head>
    <meta charset="utf-8">
    <title>CSS</title>
    <style>
      * {
        font-style: italic;
      }
    </style>
  </head>
  <body>
    <h1>Lorem</h1>
    <p>Ipsum</p>
    <ul>
      <li>Dolor</li>
      <li>Amet</li>
    </ul>
  </body>
</html




[타입 선택자(Type Selector)]

타입 선택자(Type Selector) h1, p ,div, span 등 HTML 요소를 선택하는 선택자입니다.

p {color:blue;}

는 HTML 문서 안에 모든 p 요소의 내용을 파란색으로 만듭니다.

- 예제 -

h1 요소의 글자색은 파랗게, blockquote 요소의 글자를 기울임꼴로 만드는 예제입니다.

  h1 {
        color: blue;
      }
      blockquote {
        font-style: italic;
     }

[클래스 선택자(Class Selector)]

클래스 선택자(Class Selector)는 특정 값을 class 속성(attribute)의 값으로 갖는 요소(element)를 선택합니다.
속성값 앞에 .을 붙여 클래스임을 나타냅니다. 

.abc

는 class 속성값으로 abc를 갖는 요소를 선택합니다.


[클랙스 선택자 앞에 아무 것도 없으면]

클래스 선택자 앞에 아무 것도 없으면 그 값을 갖는 모든 요소를 선택합니다. 
즉.abc는 *.abc와 같은 의미로 

<h1 class="abc">Lorem</h1>
<p class="abc">Lorem</p>

모두 선택합니다.


[클랙스 선택자 앞에 아무 것도 있으면]

클래스 선택자 앞에 무언가 있으면 모두 만족하는 요소를 선택합니다.

p.abc

는 class 값으로 abc를 갖는 p 요소를 성택합니다. 이렇게 하면

<h1 class="abc">Lorem</h1> 

은 선택되지 않고,


<p class="abc">Lorem</p>

는 선택됩니다.

- 예제  -

   .abc {
        color: blue;
      }
      ul.xyz {
        color: red;
      }



[아이디 선택자(ID Selector)]

아이디 선택자는 특정 값을 id 속성의 값으로 갖는 요소를 선택합니다.


#abc {
  color: red;
}



[속성 선택자(Attribute Selector)]


속성 선택자(Attribute Selector)는 특정 속성(attribute)을 갖고 있거나 
특정 속성이 특정 값 등을 갖고 있는 요소(element)를 선택합니다.
속성선택자는 다음과 같이 7가지 형태가 있습니다

[속성]

[속성="값"]
[속성~="값"]
[속성|="값"]
[속성^="값"]
[속성$="값"]
[속성*="값"]


h1[title]
h1[title="abc"]
h1[title~="abc"] //attributename 속성의 값이 value를 포함한 요소를 선택합니다
h1[title|="abc"] //value이거나 value-로 시작하는 요소를 선택합니다. 
h1[title^="abc"] //attributename 속성의 값이 value로 시작하는 요소를 선택합
h1[title$="abc"] //attributename 속성의 값이 value로 끝나는 요소를 선택합니다
h1[title*="abc"] //attributename 속성의 값이 value를 포함한 요소를 선택합니다


[가상 요소(Pseudo-elements)]

가상 요소(Pseudo-elements)는 요소의 특정 부분을 선택합니다.

::first-line
::first-letter
::before
::after

가상 클래스는 콜론을 한개(:),가상요소는 콜런을 두개 (::) 씁니다.
하지만 콜론을 한개 만 (:) 써도 대부분의 브라우저에서 제대로 작동합니다.

::first-line은 요소의 첫번째 줄을 선택합니다.

p::first-line {
  color: red;
}

::first-letter은 요소의 첫번쨰 문자를 선택합니다.

p::first-letter {
  color: red;
}

::before는 요소의 앞을 선택합니다. 


p::before {
  content: "xyz";
  color: red;
}

는 p 요소 앞에 xyz라는 단어를 넣고 색을 빨간색으로 만듭니다.


::after는 요소의 뒤를 선택합니다.


p::after {
  content: "xyz";
  color: red;
}

는 p 요소 뒤에 xyz라는 단어를 넣고 색을 빨간색으로 만듭니다.


[가상 클래스(Pseudo-classes)]

- :empty -

:empty는 내용이 없는 비어있는 요소를 선택합니다.


selector:empty { ... }

예를 들어 

li:empty

는 li 요소 중 내용이 없는 것을 선택합니다 즉

<li></li> 가 선택랍니다.

공백도 내용이 있는 것으로 봅니다. 따라서

<li> </li> 처럼 빈 칸이 있는 것은 선택되지 않습니다.


  body {
        font-size: 50px;
      }
      li:empty {
        border: 1px solid #444444;
      }


- :first-child -

:first-child는 형제 요소 중 첫번째 요소를 선택합니다.

selector:first-child { ... }


  li:first-child {
        color: red;
      }


- :hover -

selector:hover { ... }

p:hover {color: red;}

는 p 요소에 마우스를 올렸을 때 글자색을 빨간색으로 만듭니다. 
마우스를 다른 곳으로 이동하면 원래 모양으로 돌아옵니다.

li:hover {
        color: white;
        background-color: green;
}


 <ul>
      <li>One</li>
      <li>Two</li>
      <li>Three</li>
      <li>Four</li>
      <li>Five</li>
      <li>Six</li>
    </ul>


-  :link -

:link는 방문하지 않은 링크를 선택합니다.

a:link { ... }


- :nth-child -

:nth-child는 형제 요소 중 an+b번째 요소들을 선택합니다.

selector:nth-child(an+b){ ... }

an+b

an+b에서 a와 b는 상수로 수의 범위는 정수입니다. n은 변수로 음이 아닌 정수가 차례대로 대입됩니다.

예를 들어 2n+1은

n이 0일 때 2 × 0 + 1 = 1
n이 1일 때 2 × 1 + 1 = 3
n이 2일 때 2 × 2 + 1 = 5
…
이므로

:nth-child(2n+1)

은 형제 요소 중 1, 3, 5, …번째 요소들을 선택합니다.

li:nth-child(2n+1) {
        color: red;
      }

 <ol>
      <li>One</li>
      <li>Two</li>
      <li>Three</li>
      <li>Four</li>
      <li>Five</li>
      <li>Six</li>
    </ol>


- an+b의 값이 음수인 경우 -

an+b의 값은 음수가 될 수도 있습니다. 예를 들어

:nth-child(2n-1)

이라면 n이 0일 때 -1입니다. 이 때는 선택할 요소가 없으므로 무시됩니다. 즉

:nth-child(2n+1)

과 같은 결과를 만듭니다.


- an+b에서 a가 0인 경우 -

an+b에서 a가 0이라면 b만 남습니다. n이 변해도 무조건 b이므로 하나의 요소만 선택합니다. 예를 들어

:nth-child(4)

는 형제 요소 중 4번째 요소를 선택합니다.

      li:nth-child(4) {
        color: red;
      }

    <ol>
      <li>One</li>
      <li>Two</li>
      <li>Three</li>
      <li>Four</li>
      <li>Five</li>
      <li>Six</li>
    </ol>


- even과 odd - 

an+b 대신에 even 또는 odd를 넣을 수 있습니다. 
even은 짝수번째 요소를 선택하고, odd는 홀수번째 요소를 선택합니다.

  li:nth-child(odd) {
        color: red;
      }
      li:nth-child(even) {
        color: blue;
      }


    <ol>
      <li>One</li>
      <li>Two</li>
      <li>Three</li>
      <li>Four</li>
      <li>Five</li>
      <li>Six</li>
    </ol>



[하위 선택자(Descendant Selector)]

하위 선택자(Descendant Selector)는 특정 요소의 하위에 있는 요소를 선택합니다. 예를 들어

div blockquote

는 div 와 blockqoute 사이에 요소가 더 있어도 선택이 됩니다.


<div>
  <blockquote>...</blockquote>
</div>

일 때도 blockquote를 선택하고,

<div>
  <aside>
    <blockquote>...</blockquote>
  </aside>
</div>

일 때도 blockquote를 선택합니다.


.as p.df {color: green;}

<p class="df">Lorem ipsum dolor sit amet.</p>
  <div class="as">
    <p class="df">Lorem ipsum dolor sit amet.</p>
    <p>Lorem ipsum dolor sit amet.</p>
    <div class="qw">
      <p class="df">Lorem ipsum dolor sit amet.</p>
    </div>
  </div>



[자식 선택자(Child Selector)]

자식 선택자(Child Selector)는 특정 요소의 자식 요소를 선택합니다. 예를 들어

div > blockquote

는 div 요소의 자식 요소 중 blockqoute를 선택합니다.

주의할 점은 한단계 아래에 있는 요소만 선택한다는 것입니다. 즉

<div>
  <blockquote>...</blockquote>
</div>

일 때는 blockquote를 선택하지만

<div>
  <aside>
    <blockquote>...</blockquote>
  </aside>
</div>

일 때는 blockquote를 선택하지 않습니다.


[형제 선택자(Sibling Selector)]

형제 선택자(Sibling Selector)는 어떤 요소의 형제 요소를 선택하는 선택자입니다. 예를 들어

h1 ~ p

는 h1 요소의 형제 요소 중 p 요소를 선택합니다.

 h1 ~ p {color: red;}

<h1>Lorem ipsum dolor sit amet.</h1>  //빨강
<p>Lorem ipsum dolor sit amet.</p> //빨강
<p>Lorem ipsum dolor sit amet.</p> //X



[인접 형제 선택자(Adjacent Sibling Selector)]


인접 형제 선택자(Adjacent Sibling Selector)는 어떤 요소의 
형제 요소 중 첫번째 요소를 선택합니다. 예를 들어

h1 + p

는 h1 요소의 형제 요소 중 첫번째 p 요소를 선택합니다.


 h1 + p {color: red;}


 <h1>Lorem ipsum dolor sit amet.</h1>
    <p>Lorem ipsum dolor sit amet.</p> //이놈만 빨강
    <p>Lorem ipsum dolor sit amet.</p>
    <div>
      <p>Lorem ipsum dolor sit amet.</p>
    </div>



