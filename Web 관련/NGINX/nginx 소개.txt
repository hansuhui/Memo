[NGINX]

NGINX는 차세대 웹서버로 불린다. 위의 그래프를 통해서 알 수 있듯이 Apache의 독주에
제동을 걸고 있다. NGINX의 특징은 한마디로 정의하면 아래와 같다.

더 적은 자원으로 더 빠르게 데이터를 서비스 할 수 있다.

[NGINX 와 Apache의 관계]

Apache는 웹의 산증인이라고 해도 과언이 아니다. 위에 그래프에 따르면 1996년 이래로
한 번도 1등의 자리를 놓친적이 없다. 오픈소스이고 , 무료로 사용할 수 있는 
소프트웨워인 아파치가 웹을 지탱하고 있다고 해도 과언디 아니다. 하지만, 아파치는
오래전ㄴ에 만들어진 소프트웨어다. 아파치가 만들어진 시대의 요구사항이 이제는 
유효하지 않은 것도 있고, 새로운 요구사항과 충돌하는 것도 있을 것이다. 그렇다고
과거의 유선을 청산하고 마냥 새로운 시대의 요구사항만 쫒아갈수는 없을 것이다.
자신이 만들어낸 의존성을 안고 서서히 잊혀지는 것이야 말로 인프라의 미덕이 아닐까

엔진엑스는 새로운 시대의 요청에 부응해서 만들어진 웹서버이다. 개발의 모든 목적이
높은 성능에 맞춰져 있다. 그리고 잘 사용하지 않는 기능은 과감하게 제외했다. 
덕분에 폭발적인 증가세에 있는 인터넷 서비를 지탱하는데 적합하다.
다음은 필자가 찾아본 Apache 와 NGINX의 속도 테스트 결과들이다.
직접 읽어보고 또 평가해보자.

- PHP 에플리케이션이 동작하는 속도 테스트
http://www.organic-development.com/blog/apache-vs-nginx-performance-comparison.html

- 클라우드 컴퓨팅 환경에서 속도 테스트

http://blog.celingest.com/en/2013/02/25/nginx-vs-apache-in-aws/



===========================================================

2002년부터 러시아의 프로그래머 이고르 시쇼브가 Apache HTTPd를 코딩하다 Apache의
C10K 문제 (10,000개 이상의 소켓을 열게 된다면 하드웨어 성능이 충북함에도 불구하고
I/O 처리 방식의 문제 때문에 프로세스가 제대로 처리하지 못한다는 것)를 보고 이를
극복하기 위해서 네이티브 Win32 환경에도 돌아갈 무설치 웹 서버 데몬 프로그램에 대한
개발을 시작하여 2004년 스푸트니크 1호 발사일에 발효한 오픈소스 서버 프로그램 현재
이고르 시쇼브와 그가 설립한 회사인 Nginx Inc가 이 프로젝트를 운영중에 있다.
목표는 가벼우면서도 강력한 프로그램이라고 한다. HTTP와 리버스 프록시 IMAP/POP3등의
서버를 구동가능하다. 

읽을때는 엔진엑스라고 읽는다. 역사가 그렇게까진 오래되진 않아서 점유율 면에서 
Apache HTTPd가 많은 한계를 많이 보였으므로 특별한 사요가 없다면 nginx로 갈아타는
추세다. 다만 확장 모듈이 Apache HTTPd에 비해 부족한게 흠인데, 어차피 Apache HTTPd
의 많은 학장 모듈을 제대로 쓰는 사람은 드물다. 오히려 쓰지도 않으면서 괜히 
리소스만 낭비하는 대부분이다.
(사실 사용자가 주어진 모듈이 어떤 기능을 하는지 다 알지 못하기 때문이다.)
따라서 호환성 확인 후 별다른 문제가 없다면 Nginx로 갈아타는 것이 현추세. 
이미 Apache HTTPd에서 많이 사용하는 필수적인 모듈은 Nginx에도 존재하고 일부 모듈은
Apache HTTPd의 것보다 수십배 이상 빠르다. 마이크로소프트 진영에는 GUI 제공으로
인해 관리가 쉬운 인터넷 정보 서비스에 밀리지만, 이쪽은 취향과 돈의 문제라서
1:1 비교가 힘들다.

구조적으로는 Apache HTTPd에서 사용하는 요청 당 스레드 혹은 프로세스 기반의 구조 
대신 비동기 이벤트 기반의 구조로 작동한다. 이로 인해서 서버 부하시 성능 예측이 
쉽다. 덤으로 10,000개의 동시 접속을 하면 그 10,000개의 드는 메모르 점유는 평균
2.5MB다.. (...) 리눅스 기반으로 구축하는 웹 서버의 경우 기존의 LAMP(Linux +
 Apache + MySQl + PHP or Python or Perl) 대신 LEMP를 쓴다. Nginx는 여러 서드파티
기능을 모듈로 쓰고 있으며, 그래서 필요하지 않을 경우 모듈을 제외해 놓을 수 있다.
단, 완성된 바이너리를 사용하지 않고 소스를 컴파일해서 사용할 떄 처으부터 사용할
모듈을 추가하지 않으면 , 그 이후에 추가가 안되는건 함정.

Nginx를 사용할 떄 환경 설정을 바꾸고 나서 서버 데몬을 재시작할 필요없이 reload
시그널을 보내면 된다. 즉, 프로세스를 재시작할 필요가 없다는 점이 있다.

넷크래프트의 2013년 1월 웹서버 조사에서, 조사한 사이트중 점유율 3위를 차지하였으며아마존닷컴 웹서비스에서는 44% 이상의 점유율로 1위,트래픽이 높은 웹 서버 중 3위를
차지했으며, 이 추세라면 잘 나가는 사이트쪽에선 콩라인 등극이 가능할 듯 보여진다.




 