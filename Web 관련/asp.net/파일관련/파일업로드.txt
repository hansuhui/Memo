#region 파일 업로드
        /// <summary>
        /// 폴더 및 해당 날짜에 파일을 저장한다
        /// 트랜젝션은 해당 컨트롤러에서 적용
        /// </summary>
        /// <param name="seq">나중에 불러올 키값</param>
        /// <param name="table">지정 테이블</param>
        /// <param name="folderName">폴더이름</param>
        [HttpPost]
        public void fileUpload()
        {

	    string folderPath = "파일경로";
            string GetDate = DateTime.Now.ToShortDateString().Replace("-", "");
	    folderPath += GetDate + "\\";
	    string serverPath = Server.MapPath("~" + fileName); //상대경로 넣어서 절대경로 받아오기

            HttpFileCollectionBase files = Request.Files;


            DirectoryInfo Directory = new DirectoryInfo(folderPath);

            if (!Directory.Exists)
            {
                Directory.Create();
            }


            foreach (string f in files)
            {
                if (files[f].ContentLength > 0)
                {

                    string[] fileID = f.Split('_');

                    string Extenstion = null;

                    //확장자 검사
                    if (Path.GetExtension(files[f].FileName) != null)
                    {
                        Extenstion = Path.GetExtension(files[f].FileName).ToString();
                        CheckExtension(Extenstion);

                    }
                    //확장자가 없을때
                    else
                    {
                        string script = string.Empty;
                        script += "<script>";
                        script += "	alert('업로드가 불가한 파일입니다.'); ";
                        script += " history.go(-1);";
                        script += "</script>";
                        Response.Write(script);
                        Response.End();

                    }


                    fileName = files[f].FileName
                    filePath = Path.Combine(folderPath, fileModel.FILE_NAME);
                    fileModel.FILE_ROUTE = filePath.Replace("C:\\wwwroot\\FileFolder\\TTK", "").Replace("\\", "/"); 상대경로 지정
                    files[f].SaveAs(filePath);

                }
            }

        }

        #endregion